/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/@telegram-apps/sdk/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@telegram-apps/sdk/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $createRequestId: () => (/* binding */ Mr),\n/* harmony export */   $debug: () => (/* binding */ lr),\n/* harmony export */   $postEvent: () => (/* binding */ Ao),\n/* harmony export */   $targetOrigin: () => (/* binding */ gr),\n/* harmony export */   $version: () => (/* binding */ V),\n/* harmony export */   CancelablePromise: () => (/* binding */ b),\n/* harmony export */   ERR_ABORTED: () => (/* binding */ po),\n/* harmony export */   ERR_ACCESS_DENIED: () => (/* binding */ kr),\n/* harmony export */   ERR_ALREADY_MOUNTING: () => (/* binding */ xr),\n/* harmony export */   ERR_ALREADY_OPENED: () => (/* binding */ Wt),\n/* harmony export */   ERR_ALREADY_REQUESTING: () => (/* binding */ q),\n/* harmony export */   ERR_CANCELED: () => (/* binding */ _o),\n/* harmony export */   ERR_CSS_VARS_ALREADY_BOUND: () => (/* binding */ Vr),\n/* harmony export */   ERR_CUSTOM_METHOD_ERR_RESPONSE: () => (/* binding */ br),\n/* harmony export */   ERR_DATA_INVALID_SIZE: () => (/* binding */ Nr),\n/* harmony export */   ERR_EMOJI_STATUS_SET_FAILED: () => (/* binding */ qr),\n/* harmony export */   ERR_FULLSCREEN_FAILED: () => (/* binding */ Ur),\n/* harmony export */   ERR_INVALID_SLUG: () => (/* binding */ Dr),\n/* harmony export */   ERR_INVALID_URL: () => (/* binding */ Ft),\n/* harmony export */   ERR_INVALID_VALUE: () => (/* binding */ Ms),\n/* harmony export */   ERR_METHOD_PARAMETER_UNSUPPORTED: () => (/* binding */ hr),\n/* harmony export */   ERR_METHOD_UNSUPPORTED: () => (/* binding */ dr),\n/* harmony export */   ERR_NOT_AVAILABLE: () => (/* binding */ Lr),\n/* harmony export */   ERR_NOT_INITIALIZED: () => (/* binding */ jr),\n/* harmony export */   ERR_NOT_MOUNTED: () => (/* binding */ Hr),\n/* harmony export */   ERR_NOT_SUPPORTED: () => (/* binding */ In),\n/* harmony export */   ERR_PARSE: () => (/* binding */ Qn),\n/* harmony export */   ERR_POPUP_INVALID_PARAMS: () => (/* binding */ ce),\n/* harmony export */   ERR_RETRIEVE_LP_FAILED: () => (/* binding */ mr),\n/* harmony export */   ERR_TIMED_OUT: () => (/* binding */ fo),\n/* harmony export */   ERR_UNEXPECTED_TYPE: () => (/* binding */ Ds),\n/* harmony export */   ERR_UNEXPECTED_VALUE: () => (/* binding */ Is),\n/* harmony export */   ERR_UNKNOWN_ENV: () => (/* binding */ go),\n/* harmony export */   TypedError: () => (/* binding */ l),\n/* harmony export */   addEventListener: () => (/* binding */ lo),\n/* harmony export */   addToHomeScreen: () => (/* binding */ uu),\n/* harmony export */   authenticateBiometry: () => (/* binding */ aa),\n/* harmony export */   backButton: () => (/* binding */ Hc),\n/* harmony export */   bindMiniAppCssVars: () => (/* binding */ Ei),\n/* harmony export */   bindThemeParamsCssVars: () => (/* binding */ di),\n/* harmony export */   bindViewportCssVars: () => (/* binding */ Sc),\n/* harmony export */   biometry: () => (/* binding */ Uc),\n/* harmony export */   biometryMountError: () => (/* binding */ Ro),\n/* harmony export */   biometryState: () => (/* binding */ Qe),\n/* harmony export */   changeFullscreenError: () => (/* binding */ ls),\n/* harmony export */   changeFullscreenPromise: () => (/* binding */ En),\n/* harmony export */   checkHomeScreenStatus: () => (/* binding */ lu),\n/* harmony export */   checkHomeScreenStatusError: () => (/* binding */ $c),\n/* harmony export */   checkHomeScreenStatusPromise: () => (/* binding */ Ps),\n/* harmony export */   classNames: () => (/* binding */ yt),\n/* harmony export */   closeMiniApp: () => (/* binding */ wi),\n/* harmony export */   closeQrScanner: () => (/* binding */ Bt),\n/* harmony export */   closingBehavior: () => (/* binding */ qc),\n/* harmony export */   cloudStorage: () => (/* binding */ Fc),\n/* harmony export */   compareVersions: () => (/* binding */ Tr),\n/* harmony export */   createPostEvent: () => (/* binding */ $r),\n/* harmony export */   defineEventHandlers: () => (/* binding */ Cr),\n/* harmony export */   deleteCloudStorageItem: () => (/* binding */ ga),\n/* harmony export */   deleteCssVar: () => (/* binding */ Lt),\n/* harmony export */   disableClosingConfirmation: () => (/* binding */ fa),\n/* harmony export */   disableVerticalSwipes: () => (/* binding */ sc),\n/* harmony export */   emitMiniAppsEvent: () => (/* binding */ vt),\n/* harmony export */   enableClosingConfirmation: () => (/* binding */ da),\n/* harmony export */   enableVerticalSwipes: () => (/* binding */ rc),\n/* harmony export */   exitFullscreen: () => (/* binding */ dc),\n/* harmony export */   expandViewport: () => (/* binding */ yc),\n/* harmony export */   getCloudStorageItem: () => (/* binding */ wa),\n/* harmony export */   getCloudStorageKeys: () => (/* binding */ Sa),\n/* harmony export */   getCurrentTime: () => (/* binding */ Eu),\n/* harmony export */   hapticFeedback: () => (/* binding */ Wc),\n/* harmony export */   hapticFeedbackImpactOccurred: () => (/* binding */ Ca),\n/* harmony export */   hapticFeedbackNotificationOccurred: () => (/* binding */ va),\n/* harmony export */   hapticFeedbackSelectionChanged: () => (/* binding */ Ta),\n/* harmony export */   hideBackButton: () => (/* binding */ Wr),\n/* harmony export */   hideSettingsButton: () => (/* binding */ Yi),\n/* harmony export */   init: () => (/* binding */ vu),\n/* harmony export */   initData: () => (/* binding */ Gc),\n/* harmony export */   initDataAuthDate: () => (/* binding */ Io),\n/* harmony export */   initDataCanSendAfter: () => (/* binding */ Do),\n/* harmony export */   initDataCanSendAfterDate: () => (/* binding */ $a),\n/* harmony export */   initDataChat: () => (/* binding */ Ra),\n/* harmony export */   initDataChatInstance: () => (/* binding */ Pa),\n/* harmony export */   initDataChatType: () => (/* binding */ Oa),\n/* harmony export */   initDataHash: () => (/* binding */ Ba),\n/* harmony export */   initDataQueryId: () => (/* binding */ Ma),\n/* harmony export */   initDataRaw: () => (/* binding */ No),\n/* harmony export */   initDataReceiver: () => (/* binding */ Ia),\n/* harmony export */   initDataStartParam: () => (/* binding */ Na),\n/* harmony export */   initDataState: () => (/* binding */ en),\n/* harmony export */   initDataUser: () => (/* binding */ ka),\n/* harmony export */   invoice: () => (/* binding */ Qc),\n/* harmony export */   invokeCustomMethod: () => (/* binding */ Rr),\n/* harmony export */   isAbortError: () => (/* binding */ kc),\n/* harmony export */   isAuthenticatingBiometry: () => (/* binding */ Ie),\n/* harmony export */   isBackButtonMounted: () => (/* binding */ me),\n/* harmony export */   isBackButtonSupported: () => (/* binding */ Fr),\n/* harmony export */   isBackButtonVisible: () => (/* binding */ $t),\n/* harmony export */   isBiometryMounted: () => (/* binding */ Je),\n/* harmony export */   isBiometryMounting: () => (/* binding */ Kr),\n/* harmony export */   isBiometrySupported: () => (/* binding */ oa),\n/* harmony export */   isCanceledError: () => (/* binding */ xc),\n/* harmony export */   isChangingFullscreen: () => (/* binding */ lc),\n/* harmony export */   isCheckingHomeScreenStatus: () => (/* binding */ cu),\n/* harmony export */   isClosingBehaviorMounted: () => (/* binding */ he),\n/* harmony export */   isClosingConfirmationEnabled: () => (/* binding */ Rt),\n/* harmony export */   isCloudStorageSupported: () => (/* binding */ ba),\n/* harmony export */   isColorDark: () => (/* binding */ Vo),\n/* harmony export */   isFullscreen: () => (/* binding */ us),\n/* harmony export */   isHapticFeedbackSupported: () => (/* binding */ Aa),\n/* harmony export */   isIframe: () => (/* binding */ tr),\n/* harmony export */   isInvoiceOpened: () => (/* binding */ Ne),\n/* harmony export */   isInvoiceSupported: () => (/* binding */ Va),\n/* harmony export */   isMainButtonEnabled: () => (/* binding */ Xa),\n/* harmony export */   isMainButtonLoaderVisible: () => (/* binding */ ei),\n/* harmony export */   isMainButtonMounted: () => (/* binding */ ge),\n/* harmony export */   isMainButtonVisible: () => (/* binding */ ti),\n/* harmony export */   isMiniAppActive: () => (/* binding */ ot),\n/* harmony export */   isMiniAppCssVarsBound: () => (/* binding */ xe),\n/* harmony export */   isMiniAppDark: () => (/* binding */ hi),\n/* harmony export */   isMiniAppMounted: () => (/* binding */ ye),\n/* harmony export */   isMiniAppSupported: () => (/* binding */ bi),\n/* harmony export */   isPopupOpened: () => (/* binding */ Le),\n/* harmony export */   isPopupSupported: () => (/* binding */ Ti),\n/* harmony export */   isQrScannerOpened: () => (/* binding */ X),\n/* harmony export */   isQrScannerSupported: () => (/* binding */ Bi),\n/* harmony export */   isRGB: () => (/* binding */ fe),\n/* harmony export */   isRGBShort: () => (/* binding */ xs),\n/* harmony export */   isRecord: () => (/* binding */ Xn),\n/* harmony export */   isRequestingBiometryAccess: () => (/* binding */ De),\n/* harmony export */   isRequestingEmojiStatusAccess: () => (/* binding */ su),\n/* harmony export */   isRequestingPhoneAccess: () => (/* binding */ wt),\n/* harmony export */   isRequestingWriteAccess: () => (/* binding */ St),\n/* harmony export */   isSSR: () => (/* binding */ Dn),\n/* harmony export */   isSecondaryButtonEnabled: () => (/* binding */ ki),\n/* harmony export */   isSecondaryButtonLoaderVisible: () => (/* binding */ xi),\n/* harmony export */   isSecondaryButtonMounted: () => (/* binding */ Ae),\n/* harmony export */   isSecondaryButtonSupported: () => (/* binding */ qi),\n/* harmony export */   isSecondaryButtonVisible: () => (/* binding */ Vi),\n/* harmony export */   isSettingEmojiStatus: () => (/* binding */ au),\n/* harmony export */   isSettingsButtonMounted: () => (/* binding */ Ce),\n/* harmony export */   isSettingsButtonSupported: () => (/* binding */ Ji),\n/* harmony export */   isSettingsButtonVisible: () => (/* binding */ Mt),\n/* harmony export */   isSwipeBehaviorMounted: () => (/* binding */ ve),\n/* harmony export */   isSwipeBehaviorSupported: () => (/* binding */ nc),\n/* harmony export */   isTMA: () => (/* binding */ Bn),\n/* harmony export */   isThemeParamsCssVarsBound: () => (/* binding */ ke),\n/* harmony export */   isThemeParamsDark: () => (/* binding */ Fa),\n/* harmony export */   isThemeParamsMounted: () => (/* binding */ be),\n/* harmony export */   isTimeoutError: () => (/* binding */ Nc),\n/* harmony export */   isVerticalSwipesEnabled: () => (/* binding */ It),\n/* harmony export */   isViewportCssVarsBound: () => (/* binding */ je),\n/* harmony export */   isViewportExpanded: () => (/* binding */ Ac),\n/* harmony export */   isViewportMounted: () => (/* binding */ Be),\n/* harmony export */   isViewportMounting: () => (/* binding */ pc),\n/* harmony export */   isViewportStable: () => (/* binding */ Cc),\n/* harmony export */   mainButton: () => (/* binding */ Jc),\n/* harmony export */   mainButtonBackgroundColor: () => (/* binding */ Ka),\n/* harmony export */   mainButtonHasShineEffect: () => (/* binding */ Za),\n/* harmony export */   mainButtonState: () => (/* binding */ sn),\n/* harmony export */   mainButtonText: () => (/* binding */ ni),\n/* harmony export */   mainButtonTextColor: () => (/* binding */ oi),\n/* harmony export */   mergeClassNames: () => (/* binding */ Dc),\n/* harmony export */   miniApp: () => (/* binding */ Yc),\n/* harmony export */   miniAppBackgroundColor: () => (/* binding */ Ee),\n/* harmony export */   miniAppBackgroundColorRGB: () => (/* binding */ cn),\n/* harmony export */   miniAppBottomBarColor: () => (/* binding */ we),\n/* harmony export */   miniAppBottomBarColorRGB: () => (/* binding */ un),\n/* harmony export */   miniAppHeaderColor: () => (/* binding */ Se),\n/* harmony export */   miniAppHeaderColorRGB: () => (/* binding */ Go),\n/* harmony export */   miniAppReady: () => (/* binding */ yi),\n/* harmony export */   miniAppState: () => (/* binding */ zo),\n/* harmony export */   mockTelegramEnv: () => (/* binding */ Vc),\n/* harmony export */   mountBackButton: () => (/* binding */ Gr),\n/* harmony export */   mountBiometry: () => (/* binding */ ua),\n/* harmony export */   mountClosingBehavior: () => (/* binding */ ma),\n/* harmony export */   mountMainButton: () => (/* binding */ ai),\n/* harmony export */   mountMiniApp: () => (/* binding */ Si),\n/* harmony export */   mountSecondaryButton: () => (/* binding */ Fi),\n/* harmony export */   mountSettingsButton: () => (/* binding */ Ki),\n/* harmony export */   mountSwipeBehavior: () => (/* binding */ ac),\n/* harmony export */   mountThemeParams: () => (/* binding */ qo),\n/* harmony export */   mountViewport: () => (/* binding */ Ec),\n/* harmony export */   off: () => (/* binding */ v),\n/* harmony export */   offAddToHomeScreenFailed: () => (/* binding */ du),\n/* harmony export */   offAddedToHomeScreen: () => (/* binding */ fu),\n/* harmony export */   offBackButtonClick: () => (/* binding */ Qr),\n/* harmony export */   offMainButtonClick: () => (/* binding */ ci),\n/* harmony export */   offSecondaryButtonClick: () => (/* binding */ Gi),\n/* harmony export */   offSettingsButtonClick: () => (/* binding */ Xi),\n/* harmony export */   on: () => (/* binding */ E),\n/* harmony export */   onAddToHomeScreenFailed: () => (/* binding */ _u),\n/* harmony export */   onAddedToHomeScreen: () => (/* binding */ pu),\n/* harmony export */   onBackButtonClick: () => (/* binding */ zr),\n/* harmony export */   onMainButtonClick: () => (/* binding */ ii),\n/* harmony export */   onSecondaryButtonClick: () => (/* binding */ Wi),\n/* harmony export */   onSettingsButtonClick: () => (/* binding */ Zi),\n/* harmony export */   openBiometrySettings: () => (/* binding */ ia),\n/* harmony export */   openInvoice: () => (/* binding */ La),\n/* harmony export */   openLink: () => (/* binding */ mu),\n/* harmony export */   openPopup: () => (/* binding */ $i),\n/* harmony export */   openQrScanner: () => (/* binding */ Ii),\n/* harmony export */   openTelegramLink: () => (/* binding */ Pc),\n/* harmony export */   parseInitData: () => (/* binding */ zc),\n/* harmony export */   parseThemeParams: () => (/* binding */ pi),\n/* harmony export */   popup: () => (/* binding */ Kc),\n/* harmony export */   postEvent: () => (/* binding */ Ht),\n/* harmony export */   qrScanner: () => (/* binding */ Zc),\n/* harmony export */   readTextFromClipboard: () => (/* binding */ wu),\n/* harmony export */   removeEventHandlers: () => (/* binding */ vr),\n/* harmony export */   request: () => (/* binding */ Ut),\n/* harmony export */   requestBiometry: () => (/* binding */ Xr),\n/* harmony export */   requestBiometryAccess: () => (/* binding */ ca),\n/* harmony export */   requestContact: () => (/* binding */ bu),\n/* harmony export */   requestContentSafeAreaInsets: () => (/* binding */ hc),\n/* harmony export */   requestEmojiStatusAccess: () => (/* binding */ ru),\n/* harmony export */   requestEmojiStatusAccessError: () => (/* binding */ vc),\n/* harmony export */   requestEmojiStatusAccessPromise: () => (/* binding */ $s),\n/* harmony export */   requestFullscreen: () => (/* binding */ fc),\n/* harmony export */   requestPhoneAccess: () => (/* binding */ Mc),\n/* harmony export */   requestSafeAreaInsets: () => (/* binding */ bc),\n/* harmony export */   requestViewport: () => (/* binding */ gc),\n/* harmony export */   requestWriteAccess: () => (/* binding */ gu),\n/* harmony export */   restoreInitData: () => (/* binding */ Da),\n/* harmony export */   retrieveLaunchParams: () => (/* binding */ oe),\n/* harmony export */   safeCall: () => (/* binding */ Cu),\n/* harmony export */   secondaryButton: () => (/* binding */ Xc),\n/* harmony export */   secondaryButtonBackgroundColor: () => (/* binding */ Di),\n/* harmony export */   secondaryButtonHasShineEffect: () => (/* binding */ Ni),\n/* harmony export */   secondaryButtonPosition: () => (/* binding */ Li),\n/* harmony export */   secondaryButtonState: () => (/* binding */ fn),\n/* harmony export */   secondaryButtonText: () => (/* binding */ ji),\n/* harmony export */   secondaryButtonTextColor: () => (/* binding */ Hi),\n/* harmony export */   sendData: () => (/* binding */ Su),\n/* harmony export */   serializeLaunchParams: () => (/* binding */ Ic),\n/* harmony export */   serializeThemeParams: () => (/* binding */ vn),\n/* harmony export */   setCloudStorageItem: () => (/* binding */ ya),\n/* harmony export */   setCssVar: () => (/* binding */ Vt),\n/* harmony export */   setEmojiStatus: () => (/* binding */ iu),\n/* harmony export */   setEmojiStatusError: () => (/* binding */ Tc),\n/* harmony export */   setEmojiStatusPromise: () => (/* binding */ Rs),\n/* harmony export */   setMainButtonParams: () => (/* binding */ ui),\n/* harmony export */   setMiniAppBackgroundColor: () => (/* binding */ Ko),\n/* harmony export */   setMiniAppBottomBarColor: () => (/* binding */ Zo),\n/* harmony export */   setMiniAppHeaderColor: () => (/* binding */ Xo),\n/* harmony export */   setSecondaryButtonParams: () => (/* binding */ zi),\n/* harmony export */   settingsButton: () => (/* binding */ eu),\n/* harmony export */   shareStory: () => (/* binding */ yu),\n/* harmony export */   shareURL: () => (/* binding */ hu),\n/* harmony export */   showBackButton: () => (/* binding */ Jr),\n/* harmony export */   showSettingsButton: () => (/* binding */ ec),\n/* harmony export */   subscribe: () => (/* binding */ Lc),\n/* harmony export */   supports: () => (/* binding */ Q),\n/* harmony export */   swipeBehavior: () => (/* binding */ tu),\n/* harmony export */   switchInlineQuery: () => (/* binding */ Au),\n/* harmony export */   themeParams: () => (/* binding */ nu),\n/* harmony export */   themeParamsAccentTextColor: () => (/* binding */ ja),\n/* harmony export */   themeParamsBackgroundColor: () => (/* binding */ nn),\n/* harmony export */   themeParamsBottomBarBgColor: () => (/* binding */ jo),\n/* harmony export */   themeParamsButtonColor: () => (/* binding */ on),\n/* harmony export */   themeParamsButtonTextColor: () => (/* binding */ Lo),\n/* harmony export */   themeParamsDestructiveTextColor: () => (/* binding */ Ha),\n/* harmony export */   themeParamsHeaderBackgroundColor: () => (/* binding */ Ua),\n/* harmony export */   themeParamsHintColor: () => (/* binding */ qa),\n/* harmony export */   themeParamsLinkColor: () => (/* binding */ Wa),\n/* harmony export */   themeParamsSecondaryBackgroundColor: () => (/* binding */ Fe),\n/* harmony export */   themeParamsSectionBackgroundColor: () => (/* binding */ Ga),\n/* harmony export */   themeParamsSectionHeaderTextColor: () => (/* binding */ za),\n/* harmony export */   themeParamsSectionSeparatorColor: () => (/* binding */ Qa),\n/* harmony export */   themeParamsState: () => (/* binding */ U),\n/* harmony export */   themeParamsSubtitleTextColor: () => (/* binding */ Ja),\n/* harmony export */   themeParamsTextColor: () => (/* binding */ Ya),\n/* harmony export */   toRGB: () => (/* binding */ Zn),\n/* harmony export */   toRecord: () => (/* binding */ Yn),\n/* harmony export */   unmountBackButton: () => (/* binding */ Yr),\n/* harmony export */   unmountBiometry: () => (/* binding */ la),\n/* harmony export */   unmountClosingBehavior: () => (/* binding */ ha),\n/* harmony export */   unmountMainButton: () => (/* binding */ li),\n/* harmony export */   unmountMiniApp: () => (/* binding */ Ai),\n/* harmony export */   unmountSecondaryButton: () => (/* binding */ Qi),\n/* harmony export */   unmountSettingsButton: () => (/* binding */ tc),\n/* harmony export */   unmountSwipeBehavior: () => (/* binding */ ic),\n/* harmony export */   unmountThemeParams: () => (/* binding */ mi),\n/* harmony export */   unmountViewport: () => (/* binding */ wc),\n/* harmony export */   unsubscribe: () => (/* binding */ jc),\n/* harmony export */   updateBiometryToken: () => (/* binding */ pa),\n/* harmony export */   viewport: () => (/* binding */ ou),\n/* harmony export */   viewportContentSafeAreaInsetBottom: () => (/* binding */ gs),\n/* harmony export */   viewportContentSafeAreaInsetLeft: () => (/* binding */ Es),\n/* harmony export */   viewportContentSafeAreaInsetRight: () => (/* binding */ ws),\n/* harmony export */   viewportContentSafeAreaInsetTop: () => (/* binding */ Ss),\n/* harmony export */   viewportContentSafeAreaInsets: () => (/* binding */ Sn),\n/* harmony export */   viewportHeight: () => (/* binding */ yn),\n/* harmony export */   viewportMountError: () => (/* binding */ ps),\n/* harmony export */   viewportMountPromise: () => (/* binding */ _t),\n/* harmony export */   viewportSafeAreaInsetBottom: () => (/* binding */ ds),\n/* harmony export */   viewportSafeAreaInsetLeft: () => (/* binding */ ms),\n/* harmony export */   viewportSafeAreaInsetRight: () => (/* binding */ hs),\n/* harmony export */   viewportSafeAreaInsetTop: () => (/* binding */ bs),\n/* harmony export */   viewportSafeAreaInsets: () => (/* binding */ wn),\n/* harmony export */   viewportStableHeight: () => (/* binding */ An),\n/* harmony export */   viewportState: () => (/* binding */ _e),\n/* harmony export */   viewportWidth: () => (/* binding */ Ts)\n/* harmony export */ });\nclass G extends Error {\n  constructor(t, n, o) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : o\n      }\n    ), this.type = t, this.name = \"TypedError\", Object.setPrototypeOf(this, G.prototype);\n  }\n}\nfunction zn(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction Bs(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nconst Ms = \"ERR_INVALID_VALUE\", Is = \"ERR_UNEXPECTED_VALUE\", Ds = \"ERR_UNEXPECTED_TYPE\", Qn = \"ERR_PARSE\";\nfunction Jn(e, t) {\n  const n = {};\n  for (const o in e) {\n    const s = e[o];\n    if (!s)\n      continue;\n    let r, a;\n    typeof s == \"function\" ? (r = o, a = s) : [r, a] = s;\n    try {\n      const i = a(t(r));\n      i !== void 0 && (n[o] = i);\n    } catch (i) {\n      throw new G(\n        Qn,\n        `Parser for \"${o}\" property failed${r === o ? \"\" : `. Source field: \"${r}\"`}`,\n        i\n      );\n    }\n  }\n  return n;\n}\nfunction Yn(e) {\n  let t = e;\n  if (typeof t == \"string\")\n    try {\n      t = JSON.parse(t);\n    } catch (n) {\n      throw new G(Ms, { cause: n });\n    }\n  if (typeof t != \"object\" || !t || Array.isArray(t))\n    throw new G(Is);\n  return t;\n}\nfunction j(e, t) {\n  return (n) => {\n    const o = (s) => {\n      if (!(n && s === void 0))\n        try {\n          return t(s);\n        } catch (r) {\n          throw new G(Qn, {\n            message: `\"${e}\" transformer failed to parse the value`,\n            cause: r\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      o,\n      {\n        isValid(s) {\n          try {\n            return o(s), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction He(e, t) {\n  return j(t || \"object\", (n) => {\n    const o = Yn(n);\n    return Jn(e, (s) => o[s]);\n  });\n}\nfunction Te(e) {\n  throw new G(Ds, `Unexpected value received: ${JSON.stringify(e)}`);\n}\nconst Ns = j(\"boolean\", (e) => {\n  if (typeof e == \"boolean\")\n    return e;\n  const t = String(e);\n  if (t === \"1\" || t === \"true\")\n    return !0;\n  if (t === \"0\" || t === \"false\")\n    return !1;\n  Te(e);\n}), L = j(\"string\", (e) => {\n  if (typeof e == \"string\" || typeof e == \"number\")\n    return e.toString();\n  Te(e);\n}), Ue = j(\"number\", (e) => {\n  if (typeof e == \"number\")\n    return e;\n  if (typeof e == \"string\") {\n    const t = Number(e);\n    if (!Number.isNaN(t))\n      return t;\n  }\n  Te(e);\n}), Nt = j(\"date\", (e) => e instanceof Date ? e : new Date(Ue()(e) * 1e3));\nfunction Kn(e, t) {\n  return j(t || \"searchParams\", (n) => {\n    typeof n != \"string\" && !(n instanceof URLSearchParams) && Te(n);\n    const o = typeof n == \"string\" ? new URLSearchParams(n) : n;\n    return Jn(e, (s) => {\n      const r = o.get(s);\n      return r === null ? void 0 : r;\n    });\n  });\n}\nfunction mt(e) {\n  for (const t in e)\n    e[t] = [zn(t), e[t]];\n  return e;\n}\nconst ks = (e) => {\n  const t = Ue(), n = Ue(!0), o = L(), s = L(!0), r = Ns(!0), a = He(mt({\n    addedToAttachmentMenu: r,\n    allowsWriteToPm: r,\n    firstName: o,\n    id: t,\n    isBot: r,\n    isPremium: r,\n    languageCode: s,\n    lastName: s,\n    photoUrl: s,\n    username: s\n  }), \"User\")(!0);\n  return Kn(\n    mt({\n      authDate: Nt(),\n      canSendAfter: n,\n      chat: He(\n        mt({\n          id: t,\n          type: o,\n          title: o,\n          photoUrl: s,\n          username: s\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: s,\n      chatType: s,\n      hash: o,\n      queryId: s,\n      receiver: a,\n      startParam: s,\n      signature: o,\n      user: a\n    }),\n    \"initData\"\n  )(e);\n};\nfunction fe(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction xs(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction Zn(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (fe(t))\n    return t;\n  if (xs(t)) {\n    let o = \"#\";\n    for (let s = 0; s < 3; s += 1)\n      o += t[1 + s].repeat(2);\n    return o;\n  }\n  const n = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!n)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return n.slice(1).reduce((o, s) => {\n    const r = parseInt(s, 10).toString(16);\n    return o + (r.length === 1 ? \"0\" : \"\") + r;\n  }, \"#\");\n}\nconst Vs = j(\"rgb\", (e) => Zn(L()(e))), Ls = j(\n  \"themeParams\",\n  (e) => {\n    const t = Vs(!0);\n    return Object.entries(Yn(e)).reduce((n, [o, s]) => (n[Bs(o)] = t(s), n), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction vn(e) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(e).map(([t, n]) => [zn(t), n])\n    )\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ic(e) {\n  const {\n    initDataRaw: t,\n    startParam: n,\n    showSettings: o,\n    botInline: s,\n    fullscreen: r,\n    defaultColors: a\n  } = e, i = new URLSearchParams();\n  return i.set(\"tgWebAppPlatform\", e.platform), i.set(\"tgWebAppThemeParams\", /* @__PURE__ */ vn(e.themeParams)), i.set(\"tgWebAppVersion\", e.version), t && i.set(\"tgWebAppData\", t), n && i.set(\"tgWebAppStartParam\", n), typeof o == \"boolean\" && i.set(\"tgWebAppShowSettings\", o ? \"1\" : \"0\"), typeof s == \"boolean\" && i.set(\"tgWebAppBotInline\", s ? \"1\" : \"0\"), typeof r == \"boolean\" && i.set(\"tgWebAppFullscreen\", r ? \"1\" : \"0\"), a && i.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ vn(a)), i.toString();\n}\nfunction js(e, t) {\n  return j(\"array\", (n) => {\n    let o;\n    if (Array.isArray(n))\n      o = n;\n    else if (typeof n == \"string\")\n      try {\n        const s = JSON.parse(n);\n        Array.isArray(s) && (o = s);\n      } catch {\n      }\n    return o || Te(n), o.map(e);\n  });\n}\nfunction Xn(e) {\n  return !!e && typeof e == \"object\" && !Array.isArray(e);\n}\nfunction yt(...e) {\n  return e.map((t) => {\n    if (typeof t == \"string\")\n      return t;\n    if (Xn(t))\n      return yt(Object.entries(t).map((n) => n[1] && n[0]));\n    if (Array.isArray(t))\n      return yt(...t);\n  }).filter(Boolean).join(\" \");\n}\nfunction Dc(...e) {\n  return e.reduce((t, n) => (Xn(n) && Object.entries(n).forEach(([o, s]) => {\n    const r = yt(t[o], s);\n    r && (t[o] = r);\n  }), t), {});\n}\nclass z extends Error {\n  constructor(t, n, o) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : o\n      }\n    ), this.type = t, this.name = \"TypedError\", Object.setPrototypeOf(this, z.prototype);\n  }\n}\nfunction eo(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction Hs(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nconst Us = \"ERR_INVALID_VALUE\", qs = \"ERR_UNEXPECTED_VALUE\", Fs = \"ERR_UNEXPECTED_TYPE\", to = \"ERR_PARSE\";\nfunction no(e, t) {\n  const n = {};\n  for (const o in e) {\n    const s = e[o];\n    if (!s)\n      continue;\n    let r, a;\n    typeof s == \"function\" ? (r = o, a = s) : [r, a] = s;\n    try {\n      const i = a(t(r));\n      i !== void 0 && (n[o] = i);\n    } catch (i) {\n      throw new z(\n        to,\n        `Parser for \"${o}\" property failed${r === o ? \"\" : `. Source field: \"${r}\"`}`,\n        i\n      );\n    }\n  }\n  return n;\n}\nfunction oo(e) {\n  let t = e;\n  if (typeof t == \"string\")\n    try {\n      t = JSON.parse(t);\n    } catch (n) {\n      throw new z(Us, { cause: n });\n    }\n  if (typeof t != \"object\" || !t || Array.isArray(t))\n    throw new z(qs);\n  return t;\n}\nfunction I(e, t) {\n  return (n) => {\n    const o = (s) => {\n      if (!(n && s === void 0))\n        try {\n          return t(s);\n        } catch (r) {\n          throw new z(to, {\n            message: `\"${e}\" transformer failed to parse the value`,\n            cause: r\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      o,\n      {\n        isValid(s) {\n          try {\n            return o(s), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction M(e, t) {\n  return I(t || \"object\", (n) => {\n    const o = oo(n);\n    return no(e, (s) => o[s]);\n  });\n}\nfunction $e(e) {\n  throw new z(Fs, `Unexpected value received: ${JSON.stringify(e)}`);\n}\nconst qe = I(\"boolean\", (e) => {\n  if (typeof e == \"boolean\")\n    return e;\n  const t = String(e);\n  if (t === \"1\" || t === \"true\")\n    return !0;\n  if (t === \"0\" || t === \"false\")\n    return !1;\n  $e(e);\n}), R = I(\"string\", (e) => {\n  if (typeof e == \"string\" || typeof e == \"number\")\n    return e.toString();\n  $e(e);\n}), de = I(\"number\", (e) => {\n  if (typeof e == \"number\")\n    return e;\n  if (typeof e == \"string\") {\n    const t = Number(e);\n    if (!Number.isNaN(t))\n      return t;\n  }\n  $e(e);\n}), Ws = I(\"date\", (e) => e instanceof Date ? e : new Date(de()(e) * 1e3));\nfunction so(e, t) {\n  return I(t || \"searchParams\", (n) => {\n    typeof n != \"string\" && !(n instanceof URLSearchParams) && $e(n);\n    const o = typeof n == \"string\" ? new URLSearchParams(n) : n;\n    return no(e, (s) => {\n      const r = o.get(s);\n      return r === null ? void 0 : r;\n    });\n  });\n}\nfunction ht(e) {\n  for (const t in e)\n    e[t] = [eo(t), e[t]];\n  return e;\n}\nconst Gs = (e) => {\n  const t = de(), n = de(!0), o = R(), s = R(!0), r = qe(!0), a = M(ht({\n    addedToAttachmentMenu: r,\n    allowsWriteToPm: r,\n    firstName: o,\n    id: t,\n    isBot: r,\n    isPremium: r,\n    languageCode: s,\n    lastName: s,\n    photoUrl: s,\n    username: s\n  }), \"User\")(!0);\n  return so(\n    ht({\n      authDate: Ws(),\n      canSendAfter: n,\n      chat: M(\n        ht({\n          id: t,\n          type: o,\n          title: o,\n          photoUrl: s,\n          username: s\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: s,\n      chatType: s,\n      hash: o,\n      queryId: s,\n      receiver: a,\n      startParam: s,\n      signature: o,\n      user: a\n    }),\n    \"initData\"\n  )(e);\n};\nfunction zs(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction Qs(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction Js(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (zs(t))\n    return t;\n  if (Qs(t)) {\n    let o = \"#\";\n    for (let s = 0; s < 3; s += 1)\n      o += t[1 + s].repeat(2);\n    return o;\n  }\n  const n = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!n)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return n.slice(1).reduce((o, s) => {\n    const r = parseInt(s, 10).toString(16);\n    return o + (r.length === 1 ? \"0\" : \"\") + r;\n  }, \"#\");\n}\nconst Ys = I(\"rgb\", (e) => Js(R()(e))), Tn = I(\n  \"themeParams\",\n  (e) => {\n    const t = Ys(!0);\n    return Object.entries(oo(e)).reduce((n, [o, s]) => (n[Hs(o)] = t(s), n), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction At(e) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(e).map(([t, n]) => [eo(t), n])\n    )\n  );\n}\nconst Ks = (e) => {\n  const t = R(), n = R(!0), o = qe(!0);\n  return so({\n    botInline: [\"tgWebAppBotInline\", o],\n    defaultColors: [\"tgWebAppDefaultColors\", Tn(!0)],\n    fullscreen: [\"tgWebAppFullscreen\", o],\n    initData: [\"tgWebAppData\", Gs(!0)],\n    initDataRaw: [\"tgWebAppData\", n],\n    platform: [\"tgWebAppPlatform\", t],\n    showSettings: [\"tgWebAppShowSettings\", o],\n    startParam: [\"tgWebAppStartParam\", n],\n    themeParams: [\"tgWebAppThemeParams\", Tn()],\n    version: [\"tgWebAppVersion\", t]\n  }, \"launchParams\")(e);\n};\n// @__NO_SIDE_EFFECTS__\nfunction Zs(e) {\n  const {\n    initDataRaw: t,\n    startParam: n,\n    showSettings: o,\n    botInline: s,\n    fullscreen: r,\n    defaultColors: a\n  } = e, i = new URLSearchParams();\n  return i.set(\"tgWebAppPlatform\", e.platform), i.set(\"tgWebAppThemeParams\", /* @__PURE__ */ At(e.themeParams)), i.set(\"tgWebAppVersion\", e.version), t && i.set(\"tgWebAppData\", t), n && i.set(\"tgWebAppStartParam\", n), typeof o == \"boolean\" && i.set(\"tgWebAppShowSettings\", o ? \"1\" : \"0\"), typeof s == \"boolean\" && i.set(\"tgWebAppBotInline\", s ? \"1\" : \"0\"), typeof r == \"boolean\" && i.set(\"tgWebAppFullscreen\", r ? \"1\" : \"0\"), a && i.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ At(a)), i.toString();\n}\nconst ro = M({\n  eventType: R(),\n  eventData: (e) => e\n}, \"miniAppsMessage\"), ao = I(\"fn\", (e) => {\n  if (typeof e == \"function\")\n    return e;\n  $e(e);\n});\nfunction Xs(e) {\n  return !!e && typeof e == \"object\" && !Array.isArray(e);\n}\nconst er = M({\n  TelegramWebviewProxy: M({ postEvent: ao() })()\n});\nfunction io(e) {\n  return er().isValid(e);\n}\nfunction tr() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nvar nr = Object.defineProperty, or = (e, t, n) => t in e ? nr(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, co = (e, t, n) => or(e, typeof t != \"symbol\" ? t + \"\" : t, n);\nlet l = class uo extends Error {\n  constructor(t, n, o) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : o\n      }\n    ), this.type = t, this.name = \"TypedError\", Object.setPrototypeOf(this, uo.prototype);\n  }\n};\nfunction lo(e, t, n) {\n  return e.addEventListener(t, n), () => e.removeEventListener(t, n);\n}\nfunction te(...e) {\n  const t = e.flat(1);\n  return [\n    t.push.bind(t),\n    () => {\n      t.forEach((n) => {\n        n();\n      });\n    }\n  ];\n}\nfunction sr(e, t) {\n  return e instanceof l && e.type === t;\n}\nfunction kt(e) {\n  return (t) => sr(t, e);\n}\nconst po = \"ERR_ABORTED\", _o = \"ERR_CANCELED\", fo = \"ERR_TIMED_OUT\";\nfunction $n(e) {\n  return new l(po, { cause: e });\n}\nconst Nc = kt(fo), kc = kt(po), xc = kt(_o);\nfunction Rn(e, t) {\n  return e.reject = t.reject, e;\n}\nclass b extends Promise {\n  constructor(t, n) {\n    let o, s;\n    typeof t == \"function\" ? (o = t, s = n) : s = t;\n    let r, a;\n    super((i, p) => {\n      s || (s = {});\n      const { abortSignal: u } = s;\n      if (u && u.aborted)\n        return p($n(u.reason));\n      const [d, w] = te(), A = (m) => (...W) => (w(), m(...W)), x = new AbortController(), { signal: T } = x;\n      a = A((m) => {\n        x.abort(m), p(m);\n      }), r = A(i), u && d(\n        lo(u, \"abort\", () => {\n          a($n(u.reason));\n        })\n      );\n      const { timeout: g } = s;\n      if (g) {\n        const m = setTimeout(() => {\n          a(new l(fo, `Timeout reached: ${g}ms`));\n        }, g);\n        d(() => {\n          clearTimeout(m);\n        });\n      }\n      o && o(r, a, T);\n    }), co(this, \"reject\"), this.reject = a;\n  }\n  /**\n   * Creates a new BetterPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new b((o, s, r) => {\n      try {\n        const a = t(r);\n        return a instanceof Promise ? a.then(o, s) : o(a);\n      } catch (a) {\n        s(a);\n      }\n    }, n);\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new b((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new b((n, o) => {\n      o(t);\n    });\n  }\n  /**\n   * Cancels the promise execution.\n   */\n  cancel() {\n    this.reject(new l(_o));\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return Rn(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return Rn(super.then(t, n), this);\n  }\n}\nfunction On(e, t) {\n  return e.resolve = t.resolve, e;\n}\nlet rr = class Me extends b {\n  constructor(t, n) {\n    let o, s;\n    typeof t == \"function\" ? (o = t, s = n) : s = t;\n    let r;\n    super((a, i, p) => {\n      r = a, o && o(a, i, p);\n    }, s), co(this, \"resolve\"), this.resolve = r;\n  }\n  /**\n   * Creates a new EnhancedPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new Me(\n      (o, s, r) => b.withFn(t, { abortSignal: r }).then(o, s),\n      n\n    );\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new Me((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new Me((n, o) => {\n      o(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return On(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return On(super.then(t, n), this);\n  }\n};\nfunction ar(e, t) {\n  return new b((n) => {\n    setTimeout(n, e);\n  }, { abortSignal: t });\n}\nfunction mo(e) {\n  return `tapps/${e}`;\n}\nfunction O(e, t) {\n  sessionStorage.setItem(mo(e), JSON.stringify(t));\n}\nfunction P(e) {\n  const t = sessionStorage.getItem(mo(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction xt(e) {\n  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);\n}\n// @__NO_SIDE_EFFECTS__\nfunction ir(e, t) {\n  t || (t = {});\n  const {\n    textColor: n,\n    bgColor: o,\n    shouldLog: s = !0\n  } = t;\n  function r(a, ...i) {\n    if (!s || typeof s == \"function\" && !s())\n      return;\n    const p = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n    console[a](\n      `%c${Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        fractionalSecondDigits: 3,\n        timeZone: \"UTC\"\n      }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,\n      `${p};background-color: lightblue;color:black`,\n      \"\",\n      `${p};${n ? `color:${n};` : \"\"}${o ? `background-color:${o}` : \"\"}`,\n      ...i\n    );\n  }\n  return [\n    function(...a) {\n      r(\"log\", ...a);\n    },\n    function(...a) {\n      r(\"error\", ...a);\n    }\n  ];\n}\nfunction Vt(e, t) {\n  document.documentElement.style.setProperty(e, t);\n}\nfunction Lt(e) {\n  document.documentElement.style.removeProperty(e);\n}\nfunction cr(e, t) {\n  t();\n}\n// @__NO_SIDE_EFFECTS__\nfunction ne(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let o = [], s = e;\n  const r = (u) => {\n    if (!n(s, u)) {\n      const d = s;\n      s = u, cr(p, () => {\n        [...o].forEach(([w, A]) => {\n          w(u, d), A && i(w, !0);\n        });\n      });\n    }\n  };\n  function a(u) {\n    const d = typeof u != \"object\" ? { once: u } : u;\n    return {\n      once: d.once || !1,\n      signal: d.signal || !1\n    };\n  }\n  const i = (u, d) => {\n    const w = a(d), A = o.findIndex(([x, T]) => x === u && T.once === w.once && T.signal === w.signal);\n    A >= 0 && o.splice(A, 1);\n  }, p = Object.assign(\n    function() {\n      return ur(p), s;\n    },\n    {\n      destroy() {\n        o = [];\n      },\n      set: r,\n      reset() {\n        r(e);\n      },\n      sub(u, d) {\n        return o.push([u, a(d)]), () => i(u, d);\n      },\n      unsub: i,\n      unsubAll() {\n        o = o.filter((u) => u[1].signal);\n      }\n    }\n  );\n  return p;\n}\nconst bt = [];\nfunction ur(e) {\n  bt.length && bt[bt.length - 1].add(e);\n}\nconst lr = /* @__PURE__ */ ne(!1), [jt, pr] = /* @__PURE__ */ ir(\"Bridge\", {\n  bgColor: \"#9147ff\",\n  textColor: \"white\",\n  shouldLog: lr\n}), _r = {\n  clipboard_text_received: M({\n    req_id: R(),\n    data: (e) => e === null ? e : R(!0)(e)\n  }, \"clipboard_text_received\"),\n  custom_method_invoked: M({\n    req_id: R(),\n    result: (e) => e,\n    error: R(!0)\n  }, \"custom_method_invoked\"),\n  popup_closed: I(\"popup_closed\", (e) => e ? M({\n    button_id: (t) => t == null ? void 0 : R()(t)\n  })()(e) : {}),\n  viewport_changed: M({\n    height: de(),\n    width: (e) => e == null ? window.innerWidth : de()(e),\n    is_state_stable: qe(),\n    is_expanded: qe()\n  }, \"viewport_changed\")\n};\nfunction fr(e) {\n  const t = window, [, n] = te(\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    lo(t, \"message\", (o) => {\n      if (o.source !== t.parent)\n        return;\n      let s;\n      try {\n        s = ro()(o.data);\n      } catch {\n        return;\n      }\n      const { eventType: r, eventData: a } = s, i = _r[r];\n      try {\n        const p = i ? i()(a) : a;\n        jt(\"Event received:\", p ? { eventType: r, eventData: p } : { eventType: r }), e([r, p]);\n      } catch (p) {\n        pr(\n          [\n            `An error occurred processing the \"${r}\" event from the Telegram application.`,\n            \"Please, file an issue here:\",\n            \"https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose\"\n          ].join(`\n`),\n          s,\n          p\n        );\n      }\n    })\n  );\n  return n;\n}\nconst Ct = /* @__PURE__ */ ne(), Pn = /* @__PURE__ */ ne();\nfunction ho() {\n  return Pn() || Pn.set(fr(Ct.set)), Ct;\n}\nconst gt = /* @__PURE__ */ ne({});\nfunction bo(e) {\n  let t = gt()[e];\n  return t || (t = /* @__PURE__ */ ne(void 0, {\n    equals() {\n      return !1;\n    }\n  }), ho().sub((n) => {\n    n && n[0] === e && t.set(n[1]);\n  }), gt.set({ ...gt(), [e]: t })), t;\n}\nfunction E(e, t, n) {\n  return bo(e).sub(t, n);\n}\nconst dr = \"ERR_METHOD_UNSUPPORTED\", mr = \"ERR_RETRIEVE_LP_FAILED\", hr = \"ERR_METHOD_PARAMETER_UNSUPPORTED\", go = \"ERR_UNKNOWN_ENV\", br = \"ERR_INVOKE_CUSTOM_METHOD_RESPONSE\", gr = /* @__PURE__ */ ne(\"https://web.telegram.org\");\nfunction Ht(e, t) {\n  jt(\"Posting event:\", t ? { eventType: e, eventData: t } : { eventType: e });\n  const n = window;\n  if (io(n)) {\n    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));\n    return;\n  }\n  const o = JSON.stringify({ eventType: e, eventData: t });\n  if (tr())\n    return n.parent.postMessage(o, gr());\n  const { external: s } = n;\n  if (M({ notify: ao() })().isValid(s)) {\n    s.notify(o);\n    return;\n  }\n  throw new l(go);\n}\nfunction Ut(e, t, n) {\n  n || (n = {});\n  const { capture: o } = n, [s, r] = te();\n  return new b((a) => {\n    (Array.isArray(t) ? t : [t]).forEach((i) => {\n      s(\n        E(i, (p) => {\n          (!o || (Array.isArray(t) ? o({\n            event: i,\n            payload: p\n          }) : o(p))) && a(p);\n        })\n      );\n    }), (n.postEvent || Ht)(e, n.params);\n  }, n).finally(r);\n}\nfunction qt(e) {\n  return Ks()(e);\n}\nfunction Eo(e) {\n  return qt(\n    e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\")\n  );\n}\nfunction Er() {\n  return Eo(window.location.href);\n}\nfunction wr() {\n  const e = performance.getEntriesByType(\"navigation\")[0];\n  if (!e)\n    throw new Error(\"Unable to get first navigation entry.\");\n  return Eo(e.name);\n}\nconst Sr = \"launchParams\";\nfunction yr() {\n  return qt(P(Sr) || \"\");\n}\nfunction wo(e) {\n  O(\"launchParams\", /* @__PURE__ */ Zs(e));\n}\nfunction So(e) {\n  return e instanceof Error ? e.message + (e.cause ? `\n  ${So(e.cause)}` : \"\") : JSON.stringify(e);\n}\nfunction oe() {\n  const e = [];\n  for (const t of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    Er,\n    // Then, try using the lower level API - window.performance.\n    wr,\n    // Finally, try to extract launch parameters from the session storage.\n    yr\n  ])\n    try {\n      const n = t();\n      return wo(n), n;\n    } catch (n) {\n      e.push(n);\n    }\n  throw new l(mr, [\n    \"Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\",\n    \"📖 Refer to docs for more information:\",\n    \"https://docs.telegram-mini-apps.com/packages/telegram-apps-bridge/environment\",\n    \"Collected errors:\",\n    ...e.map((t) => `— ${So(t)}`)\n  ].join(`\n`));\n}\nfunction Bn(e) {\n  if (e === \"simple\")\n    try {\n      return oe(), !0;\n    } catch {\n      return !1;\n    }\n  return b.withFn(async () => {\n    if (io(window))\n      return !0;\n    try {\n      return await Ut(\"web_app_request_theme\", \"theme_changed\", { timeout: 100 }), !0;\n    } catch {\n      return !1;\n    }\n  }, e);\n}\nfunction vt(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({ eventType: e, eventData: t }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nfunction Ar(e, t) {\n  if (typeof t == \"string\")\n    try {\n      const { eventType: n } = ro()(t);\n      n === \"web_app_request_theme\" && vt(\"theme_changed\", {\n        theme_params: JSON.parse(/* @__PURE__ */ At(e))\n      }), n === \"web_app_request_viewport\" && vt(\"viewport_changed\", {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: !0,\n        is_expanded: !0\n      });\n    } catch {\n    }\n}\nfunction Vc(e) {\n  var t;\n  const n = typeof e == \"string\" ? qt(e) : e;\n  wo(n);\n  const o = (t = window.TelegramWebviewProxy) == null ? void 0 : t.postEvent;\n  window.TelegramWebviewProxy = {\n    postEvent(s, r) {\n      Ar(n.themeParams, JSON.stringify({ eventType: s, eventData: r })), o == null || o(s, r);\n    }\n  }, jt(\"Environment was mocked by the mockTelegramEnv function\");\n}\nfunction Cr() {\n  [\n    [\"TelegramGameProxy_receiveEvent\"],\n    // Windows Phone.\n    [\"TelegramGameProxy\", \"receiveEvent\"],\n    // Desktop.\n    [\"Telegram\", \"WebView\", \"receiveEvent\"]\n    // Android and iOS.\n  ].forEach((e) => {\n    let t = window;\n    e.forEach((n, o, s) => {\n      if (o === s.length - 1) {\n        t[n] = vt;\n        return;\n      }\n      n in t || (t[n] = {}), t = t[n];\n    });\n  });\n}\nfunction vr() {\n  [\"TelegramGameProxy_receiveEvent\", \"TelegramGameProxy\", \"Telegram\"].forEach((e) => {\n    delete window[e];\n  });\n}\nfunction v(e, t, n) {\n  bo(e).unsub(t, n);\n}\nfunction Lc(e, t) {\n  return ho().sub(e, t);\n}\nfunction jc(e, t) {\n  Ct.unsub(e, t);\n}\nfunction yo(e) {\n  return ({ req_id: t }) => t === e;\n}\nfunction Mn(e) {\n  return e.split(\".\").map(Number);\n}\nfunction Tr(e, t) {\n  const n = Mn(e), o = Mn(t), s = Math.max(n.length, o.length);\n  for (let r = 0; r < s; r += 1) {\n    const a = n[r] || 0, i = o[r] || 0;\n    if (a !== i)\n      return a > i ? 1 : -1;\n  }\n  return 0;\n}\nfunction S(e, t) {\n  return Tr(e, t) <= 0;\n}\nfunction Q(e, t, n) {\n  if (typeof n == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\")\n        return S(\"6.4\", n);\n      if (t === \"try_browser\")\n        return S(\"7.6\", n);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\")\n      return S(\"6.9\", n);\n    if (e === \"web_app_close\" && t === \"return_back\")\n      return S(\"7.6\", n);\n    if (e === \"web_app_setup_main_button\" && t === \"has_shine_effect\")\n      return S(\"7.10\", n);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return S(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return S(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return S(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return S(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return S(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return S(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return S(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return S(\"7.7\", t);\n    case \"web_app_share_to_story\":\n      return S(\"7.8\", t);\n    case \"web_app_setup_secondary_button\":\n    case \"web_app_set_bottom_bar_color\":\n      return S(\"7.10\", t);\n    case \"web_app_request_safe_area\":\n    case \"web_app_request_content_safe_area\":\n    case \"web_app_request_fullscreen\":\n    case \"web_app_exit_fullscreen\":\n    case \"web_app_set_emoji_status\":\n    case \"web_app_add_to_home_screen\":\n    case \"web_app_check_home_screen\":\n    case \"web_app_request_emoji_status_access\":\n      return S(\"8.0\", t);\n    default:\n      return [\n        \"iframe_ready\",\n        \"iframe_will_reload\",\n        \"web_app_close\",\n        \"web_app_data_send\",\n        \"web_app_expand\",\n        \"web_app_open_link\",\n        \"web_app_ready\",\n        \"web_app_request_theme\",\n        \"web_app_request_viewport\",\n        \"web_app_setup_main_button\",\n        \"web_app_setup_closing_behavior\"\n      ].includes(e);\n  }\n}\nfunction $r(e, t) {\n  t || (t = \"strict\");\n  const n = typeof t == \"function\" ? t : (o) => {\n    const { method: s, version: r } = o;\n    let a, i;\n    if (\"param\" in o ? (a = `Parameter \"${o.param}\" of \"${s}\" method is unsupported in Mini Apps version ${r}`, i = hr) : (a = `Method \"${s}\" is unsupported in Mini Apps version ${r}`, i = dr), t === \"strict\")\n      throw new l(i, a);\n    return console.warn(a);\n  };\n  return (o, s) => Q(o, e) ? Xs(s) && o === \"web_app_set_header_color\" && \"color\" in s && !Q(o, \"color\", e) ? n({ version: e, method: o, param: \"color\" }) : Ht(o, s) : n({ version: e, method: o });\n}\nfunction Rr(e, t, n, o) {\n  return Ut(\"web_app_invoke_custom_method\", \"custom_method_invoked\", {\n    ...o || {},\n    params: { method: e, params: t, req_id: n },\n    capture: yo(n)\n  }).then(({ result: s, error: r }) => {\n    if (r)\n      throw new l(br, r);\n    return s;\n  });\n}\nfunction Or() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction D() {\n  const e = Or();\n  return !!e && e.type === \"reload\";\n}\nlet Z;\nfunction Pr(e, t) {\n  Z && Z.set(e, t) || t();\n}\nfunction Tt(e) {\n  if (Z)\n    return e();\n  Z = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    Z.forEach((t) => t()), Z = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction c(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let o = [], s = e;\n  const r = (u) => {\n    if (!n(s, u)) {\n      const d = s;\n      s = u, Pr(p, () => {\n        [...o].forEach(([w, A]) => {\n          w(u, d), A && i(w, !0);\n        });\n      });\n    }\n  };\n  function a(u) {\n    const d = typeof u != \"object\" ? { once: u } : u;\n    return {\n      once: d.once || !1,\n      signal: d.signal || !1\n    };\n  }\n  const i = (u, d) => {\n    const w = a(d), A = o.findIndex(([x, T]) => x === u && T.once === w.once && T.signal === w.signal);\n    A >= 0 && o.splice(A, 1);\n  }, p = Object.assign(\n    function() {\n      return Br(p), s;\n    },\n    {\n      destroy() {\n        o = [];\n      },\n      set: r,\n      reset() {\n        r(e);\n      },\n      sub(u, d) {\n        return o.push([u, a(d)]), () => i(u, d);\n      },\n      unsub: i,\n      unsubAll() {\n        o = o.filter((u) => u[1].signal);\n      }\n    }\n  );\n  return p;\n}\nconst ue = [];\nfunction Br(e) {\n  ue.length && ue[ue.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction _(e, t) {\n  let n = /* @__PURE__ */ new Set(), o;\n  function s() {\n    return o || (o = /* @__PURE__ */ c(a(), t));\n  }\n  function r() {\n    s().set(a());\n  }\n  function a() {\n    n.forEach((u) => {\n      u.unsub(r, { signal: !0 });\n    });\n    const i = /* @__PURE__ */ new Set();\n    let p;\n    ue.push(i);\n    try {\n      p = e();\n    } finally {\n      ue.pop();\n    }\n    return i.forEach((u) => {\n      u.sub(r, { signal: !0 });\n    }), n = i, p;\n  }\n  return Object.assign(function() {\n    return s()();\n  }, {\n    destroy() {\n      s().destroy();\n    },\n    sub(...i) {\n      return s().sub(...i);\n    },\n    unsub(...i) {\n      s().unsub(...i);\n    },\n    unsubAll(...i) {\n      s().unsubAll(...i);\n    }\n  });\n}\nconst Mr = /* @__PURE__ */ c(/* @__PURE__ */ (() => {\n  let e = 0;\n  return () => (e += 1).toString();\n})()), Ao = /* @__PURE__ */ c(Ht), V = /* @__PURE__ */ c(\"0.0\");\nfunction Ir(e) {\n  e || (e = {});\n  const { postEvent: t } = e, n = e.version || oe().version;\n  V.set(n), Ao.set(\n    typeof t == \"function\" ? t : $r(n)\n  );\n}\nfunction Co() {\n  return Mr()();\n}\nfunction se(e, t, n) {\n  return Rr(e, t, Co(), {\n    ...n || {},\n    postEvent: f\n  });\n}\nconst y = (e, t, n) => (n || (n = {}), n.postEvent || (n.postEvent = f), Ut(e, t, n)), f = (e, t) => Ao()(e, t);\nfunction N(e) {\n  return /* @__PURE__ */ _(() => Q(e, V()));\n}\nconst ce = \"ERR_POPUP_INVALID_PARAMS\", Ft = \"ERR_INVALID_URL\", Dr = \"ERR_INVALID_SLUG\", Nr = \"ERR_DATA_INVALID_SIZE\", kr = \"ERR_ACCESS_DENIED\", q = \"ERR_ALREADY_REQUESTING\", Wt = \"ERR_ALREADY_OPENED\", xr = \"ERR_ALREADY_MOUNTING\", Vr = \"ERR_VARS_ALREADY_BOUND\", Lr = \"ERR_NOT_AVAILABLE\", jr = \"ERR_NOT_INITIALIZED\", In = \"ERR_NOT_SUPPORTED\", Hr = \"ERR_NOT_MOUNTED\", Ur = \"ERR_FULLSCREEN_FAILED\", qr = \"ERR_EMOJI_STATUS_SET_FAILED\";\nfunction Dn() {\n  return typeof window > \"u\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction h(e, t, { isSupported: n, isMounted: o, component: s, supports: r } = {}) {\n  const a = `${s ? `${s}.` : \"\"}${e}()`;\n  n = n ? Array.isArray(n) || typeof n == \"object\" && \"any\" in n ? n : [n] : void 0;\n  function i(g) {\n    if (r) {\n      const m = r[g];\n      return Q(m[0], m[1], V());\n    }\n    return !0;\n  }\n  const p = () => {\n    if (!n)\n      return;\n    const g = `it is unsupported in Mini Apps version ${V()}`;\n    function m($) {\n      return typeof $ == \"string\" ? Q($, V()) ? void 0 : g : $.fn() ? void 0 : $.error;\n    }\n    if (Array.isArray(n)) {\n      for (const $ of n) {\n        const Cn = m($);\n        if (Cn)\n          return Cn;\n      }\n      return;\n    }\n    let W;\n    for (const $ of n.any)\n      if (W = m($), !W)\n        return;\n    return g;\n  }, u = (...g) => {\n    if (r) {\n      for (const m in r)\n        if (r[m][2](...g) && !i(m))\n          return `option ${m} is not supported in Mini Apps version ${V()}`;\n    }\n  }, d = /* @__PURE__ */ _(() => !p()), w = /* @__PURE__ */ _(() => V() !== \"0.0\"), A = /* @__PURE__ */ _(() => !o || o()), x = /* @__PURE__ */ _(\n    () => Bn(\"simple\") && !Dn() && w() && d() && A()\n  );\n  let T;\n  if (r) {\n    T = {};\n    for (const g in r)\n      T[g] = /* @__PURE__ */ _(() => i(g));\n  }\n  return Object.assign(\n    (...g) => {\n      const m = `Unable to call the ${a} ${s ? \"method\" : \"function\"}:`;\n      if (Dn() || !Bn(\"simple\"))\n        throw new l(\n          go,\n          `${m} it can't be called outside Mini Apps`\n        );\n      if (!w())\n        throw new l(\n          jr,\n          `${m} the SDK was not initialized. Use the SDK init() function`\n        );\n      const W = p();\n      if (W)\n        throw new l(In, `${m} ${W}`);\n      const $ = u(...g);\n      if ($)\n        throw new l(In, `${m} ${$}`);\n      if (!A())\n        throw new l(\n          Hr,\n          `${m} the component is not mounted. Use the ${s}.mount() method`\n        );\n      return t(...g);\n    },\n    t,\n    {\n      isAvailable: x,\n      ifAvailable(...g) {\n        return x() ? t(...g) : void 0;\n      }\n    },\n    n ? {\n      isSupported: d\n    } : {},\n    T ? {\n      supports: T\n    } : {}\n  );\n}\nfunction We(e, t) {\n  return t || (t = {}), (n, o, s, r) => /* @__PURE__ */ h(n, o, {\n    ...t,\n    isSupported: s || t.isSupported,\n    supports: r,\n    component: e\n  });\n}\nfunction J(e, t, n) {\n  return We(e, { isSupported: n, isMounted: t });\n}\nfunction B(e, t) {\n  return We(e, { isSupported: t });\n}\nconst Ge = \"web_app_setup_back_button\", vo = \"back_button_pressed\", ze = \"backButton\", $t = /* @__PURE__ */ c(!1), me = /* @__PURE__ */ c(!1), Fr = N(Ge), To = J(ze, me, Ge), Gt = B(ze, Ge), Wr = To(\"hide\", () => {\n  zt(!1);\n}), Gr = Gt(\"mount\", () => {\n  me() || (zt(D() && P(ze) || !1), me.set(!0));\n});\nfunction zt(e) {\n  e !== $t() && (f(Ge, { is_visible: e }), O(ze, e), $t.set(e));\n}\nconst zr = Gt(\n  \"onClick\",\n  (e) => E(vo, e)\n), Qr = Gt(\n  \"offClick\",\n  (e) => {\n    v(vo, e);\n  }\n), Jr = To(\"show\", () => {\n  zt(!0);\n});\nfunction Yr() {\n  me.set(!1);\n}\nconst Hc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  hide: Wr,\n  isMounted: me,\n  isSupported: Fr,\n  isVisible: $t,\n  mount: Gr,\n  offClick: Qr,\n  onClick: zr,\n  show: Jr,\n  unmount: Yr\n}, Symbol.toStringTag, { value: \"Module\" }));\n// @__NO_SIDE_EFFECTS__\nfunction Re(e, t, n, o, s) {\n  const r = s === void 0 || s ? b : Promise;\n  return Object.assign((...a) => r.resolve().then(async () => {\n    if (n()) {\n      const p = t();\n      throw o.set(p), p;\n    }\n    Tt(() => {\n      n.set(\n        r.resolve(e(...a))\n      ), o.set(void 0);\n    });\n    let i;\n    try {\n      i = [!0, await n()];\n    } catch (p) {\n      i = [!1, p];\n    }\n    if (Tt(() => {\n      n.set(void 0), o.set(i[0] ? void 0 : i[1]);\n    }), !i[0])\n      throw i[1];\n    return i[1];\n  }), e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction $o(e, t, n, o, s, r) {\n  const a = /* @__PURE__ */ Re(\n    t,\n    () => new l(\n      xr,\n      `The ${e} component is already mounting`\n    ),\n    s,\n    r\n  );\n  return (i) => b.resolve().then(async () => {\n    if (!o()) {\n      const p = await a(i);\n      Tt(() => {\n        o.set(!0), n(p);\n      });\n    }\n  });\n}\nconst H = We, Qe = /* @__PURE__ */ c({ available: !1 }), Ie = /* @__PURE__ */ c(!1), De = /* @__PURE__ */ c(!1), Je = /* @__PURE__ */ c(!1), Kr = /* @__PURE__ */ _(() => !!Qt()), Ro = /* @__PURE__ */ c(), Qt = /* @__PURE__ */ c(), Zr = /* @__PURE__ */ _(() => {\n  const e = Qe();\n  return e && e.available;\n});\nfunction Jt(e) {\n  return e.available ? {\n    available: !0,\n    tokenSaved: e.token_saved,\n    deviceId: e.device_id,\n    accessRequested: e.access_requested,\n    type: e.type,\n    accessGranted: e.access_granted\n  } : {\n    available: !1\n  };\n}\nconst Nn = \"web_app_biometry_get_info\", Xr = /* @__PURE__ */ h(\n  \"requestBiometry\",\n  (e) => y(Nn, \"biometry_info_received\", e).then(Jt),\n  {\n    isSupported: Nn\n  }\n), Ye = \"web_app_biometry_request_auth\", ea = \"web_app_biometry_request_access\", ta = \"web_app_biometry_open_settings\", na = \"web_app_biometry_update_token\", Yt = \"biometry_info_received\", ee = \"biometry\", oa = N(Ye), sa = H(ee), ra = B(ee, Ye), Kt = J(ee, Je, Ye);\nfunction Oo() {\n  throw new l(Lr, \"Biometry is not available\");\n}\nconst aa = Kt(\n  \"authenticate\",\n  (e) => b.withFn(async (t) => {\n    if (Ie())\n      throw new l(q, \"Authentication is already in progress\");\n    const n = Qe();\n    (!n || !n.available) && Oo(), Ie.set(!0);\n    try {\n      const o = await y(\n        Ye,\n        \"biometry_auth_requested\",\n        {\n          abortSignal: t,\n          params: {\n            reason: ((e || {}).reason || \"\").trim()\n          }\n        }\n      ), { token: s } = o;\n      return typeof s == \"string\" && Ke({ ...n, token: s }), o;\n    } finally {\n      Ie.set(!1);\n    }\n  }, e)\n), ia = ra(\"openSettings\", () => {\n  f(ta);\n}), ca = Kt(\n  \"requestAccess\",\n  (e) => b.withFn(async (t) => {\n    if (De())\n      throw new l(q, \"Access request is already in progress\");\n    De.set(!0);\n    try {\n      const n = await y(ea, Yt, {\n        abortSignal: t,\n        params: { reason: (e || {}).reason || \"\" }\n      }).then(Jt);\n      return n.available || Oo(), Ke(n), n.accessGranted;\n    } finally {\n      De.set(!1);\n    }\n  }, e)\n), ua = sa(\"mount\", /* @__PURE__ */ $o(\n  ee,\n  (e) => {\n    const t = D() && P(ee);\n    return t || Xr(e);\n  },\n  (e) => {\n    E(Yt, Po), Ke(e);\n  },\n  Je,\n  Qt,\n  Ro\n)), Po = (e) => {\n  Ke(Jt(e));\n};\nfunction Ke(e) {\n  Qe.set(e), O(ee, e);\n}\nfunction la() {\n  v(Yt, Po), Je.set(!1);\n}\nconst pa = Kt(\n  \"updateToken\",\n  (e) => (e || (e = {}), y(na, \"biometry_token_updated\", {\n    ...e,\n    params: {\n      token: e.token || \"\",\n      reason: e.reason\n    }\n  }).then((t) => t.status))\n), Uc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  authenticate: aa,\n  isAuthenticating: Ie,\n  isAvailable: Zr,\n  isMounted: Je,\n  isMounting: Kr,\n  isRequestingAccess: De,\n  isSupported: oa,\n  mount: ua,\n  mountError: Ro,\n  mountPromise: Qt,\n  openSettings: ia,\n  requestAccess: ca,\n  state: Qe,\n  unmount: la,\n  updateToken: pa\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction Ze(e, t) {\n  return We(e, { isMounted: t });\n}\nconst Xe = \"closingBehavior\", Rt = /* @__PURE__ */ c(!1), he = /* @__PURE__ */ c(!1), Bo = Ze(Xe, he), _a = H(Xe), fa = Bo(\"disableConfirmation\", () => {\n  Zt(!1);\n}), da = Bo(\"enableConfirmation\", () => {\n  Zt(!0);\n}), ma = _a(\"mount\", () => {\n  he() || (Zt(\n    D() && P(Xe) || !1\n  ), he.set(!0));\n});\nfunction Zt(e) {\n  e !== Rt() && (f(\"web_app_setup_closing_behavior\", { need_confirmation: e }), O(Xe, e), Rt.set(e));\n}\nfunction ha() {\n  he.set(!1);\n}\nconst qc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  disableConfirmation: fa,\n  enableConfirmation: da,\n  isConfirmationEnabled: Rt,\n  isMounted: he,\n  mount: ma,\n  unmount: ha\n}, Symbol.toStringTag, { value: \"Module\" })), Mo = \"web_app_invoke_custom_method\", et = B(\"cloudStorage\", Mo), ba = N(Mo), ga = et(\"deleteItem\", (e, t) => {\n  const n = Array.isArray(e) ? e : [e];\n  return n.length ? se(\"deleteStorageValues\", { keys: n }, t).then() : b.resolve();\n});\nfunction Ea(e, t) {\n  const n = Array.isArray(e) ? e : [e];\n  return n.length ? se(\"getStorageValues\", { keys: n }, t).then((o) => {\n    const s = He(\n      Object.fromEntries(n.map((r) => [r, L()]))\n    )()(o);\n    return Array.isArray(e) ? s : s[e];\n  }) : b.resolve(typeof e == \"string\" ? \"\" : {});\n}\nconst wa = et(\"getItem\", Ea), Sa = et(\"getKeys\", (e) => se(\"getStorageKeys\", {}, e).then(js(L())())), ya = et(\"setItem\", (e, t, n) => se(\"saveStorageValue\", {\n  key: e,\n  value: t\n}, n).then()), Fc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  deleteItem: ga,\n  getItem: wa,\n  getKeys: Sa,\n  isSupported: ba,\n  setItem: ya\n}, Symbol.toStringTag, { value: \"Module\" })), Oe = \"web_app_trigger_haptic_feedback\", Xt = B(\"hapticFeedback\", Oe), Aa = N(Oe), Ca = Xt(\n  \"impactOccurred\",\n  (e) => {\n    f(Oe, {\n      type: \"impact\",\n      impact_style: e\n    });\n  }\n), va = Xt(\n  \"notificationOccurred\",\n  (e) => {\n    f(Oe, {\n      type: \"notification\",\n      notification_type: e\n    });\n  }\n), Ta = Xt(\n  \"selectionChanged\",\n  () => {\n    f(Oe, { type: \"selection_change\" });\n  }\n), Wc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  impactOccurred: Ca,\n  isSupported: Aa,\n  notificationOccurred: va,\n  selectionChanged: Ta\n}, Symbol.toStringTag, { value: \"Module\" })), en = /* @__PURE__ */ c(void 0);\nfunction k(e) {\n  return /* @__PURE__ */ _(() => {\n    const t = en();\n    return t ? t[e] : void 0;\n  });\n}\nconst Io = k(\"authDate\"), Do = k(\"canSendAfter\"), $a = /* @__PURE__ */ _(() => {\n  const e = Io(), t = Do();\n  return t && e ? new Date(e.getTime() + t * 1e3) : void 0;\n}), Ra = k(\"chat\"), Oa = k(\"chatType\"), Pa = k(\"chatInstance\"), Ba = k(\"hash\"), Ma = k(\"queryId\"), No = /* @__PURE__ */ c(), Ia = k(\"receiver\");\nfunction Da() {\n  const e = oe();\n  en.set(e.initData), No.set(e.initDataRaw);\n}\nconst Na = k(\"startParam\"), ka = k(\"user\"), Gc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  authDate: Io,\n  canSendAfter: Do,\n  canSendAfterDate: $a,\n  chat: Ra,\n  chatInstance: Pa,\n  chatType: Oa,\n  hash: Ba,\n  queryId: Ma,\n  raw: No,\n  receiver: Ia,\n  restore: Da,\n  startParam: Na,\n  state: en,\n  user: ka\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction zc(e) {\n  return ks()(e);\n}\nconst tn = \"web_app_open_invoice\", xa = B(\"invoice\", tn), Ne = /* @__PURE__ */ c(!1), Va = N(tn);\nasync function ko(e, t, n) {\n  if (Ne())\n    throw new l(Wt, \"An invoice is already opened\");\n  let o;\n  if (t === \"url\") {\n    const { hostname: s, pathname: r } = new URL(e, window.location.href);\n    if (s !== \"t.me\")\n      throw new l(Ft, `Link has unexpected hostname: ${s}`);\n    const a = r.match(/^\\/(\\$|invoice\\/)([A-Za-z0-9\\-_=]+)$/);\n    if (!a)\n      throw new l(\n        Dr,\n        'Expected to receive a link with a pathname in format \"/invoice/{slug}\" or \"/${slug}\"'\n      );\n    [, , o] = a;\n  } else\n    o = e, n = t;\n  return Ne.set(!0), y(tn, \"invoice_closed\", {\n    ...n,\n    params: { slug: o },\n    capture: (s) => o === s.slug\n  }).then((s) => s.status).finally(() => {\n    Ne.set(!1);\n  });\n}\nconst La = xa(\"open\", ko), Qc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  _open: ko,\n  isOpened: Ne,\n  isSupported: Va,\n  open: La\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction xo(e) {\n  return Object.fromEntries(\n    Object.entries(e).filter((t) => t[1] !== void 0)\n  );\n}\nfunction Vo(e) {\n  const t = Zn(e);\n  return Math.sqrt(\n    [0.299, 0.587, 0.114].reduce((n, o, s) => {\n      const r = parseInt(t.slice(1 + s * 2, 1 + (s + 1) * 2), 16);\n      return n + r * r * o;\n    }, 0)\n  ) < 120;\n}\nconst be = /* @__PURE__ */ c(!1), ke = /* @__PURE__ */ c(!1), U = /* @__PURE__ */ c({});\nfunction C(e) {\n  return /* @__PURE__ */ _(() => U()[e]);\n}\nconst ja = C(\"accentTextColor\"), nn = C(\"bgColor\"), on = C(\"buttonColor\"), Lo = C(\"buttonTextColor\"), jo = C(\"bottomBarBgColor\"), Ha = C(\"destructiveTextColor\"), Ua = C(\"headerBgColor\"), qa = C(\"hintColor\"), Fa = /* @__PURE__ */ _(() => {\n  const { bgColor: e } = U();\n  return !e || Vo(e);\n}), Wa = C(\"linkColor\"), Fe = C(\"secondaryBgColor\"), Ga = C(\"sectionBgColor\"), za = C(\"sectionHeaderTextColor\"), Qa = C(\"sectionSeparatorColor\"), Ja = C(\"subtitleTextColor\"), Ya = C(\"textColor\");\nfunction Y(e) {\n  return /* @__PURE__ */ _(() => sn()[e]);\n}\nconst le = /* @__PURE__ */ c({\n  hasShineEffect: !1,\n  isEnabled: !0,\n  isLoaderVisible: !1,\n  isVisible: !1,\n  text: \"Continue\"\n}), sn = /* @__PURE__ */ _(() => {\n  const e = le();\n  return {\n    ...e,\n    backgroundColor: e.backgroundColor || on() || \"#2481cc\",\n    textColor: e.textColor || Lo() || \"#ffffff\"\n  };\n}), ge = /* @__PURE__ */ c(!1), Ka = Y(\"backgroundColor\"), Za = Y(\"hasShineEffect\"), Xa = Y(\"isEnabled\"), ei = Y(\"isLoaderVisible\"), ti = Y(\"isVisible\"), ni = Y(\"text\"), oi = Y(\"textColor\"), si = \"web_app_setup_main_button\", Ho = \"main_button_pressed\", tt = \"mainButton\", rn = H(tt), ri = Ze(tt, ge), ai = rn(\"mount\", () => {\n  if (!ge()) {\n    const e = D() && P(tt);\n    e && le.set(e), ge.set(!0);\n  }\n}), ii = rn(\n  \"onClick\",\n  (e) => E(Ho, e)\n), ci = rn(\n  \"offClick\",\n  (e) => {\n    v(Ho, e);\n  }\n), ui = ri(\n  \"setParams\",\n  (e) => {\n    le.set({ ...le(), ...xo(e) }), O(tt, le());\n    const t = sn();\n    t.text && f(si, {\n      color: t.backgroundColor,\n      has_shine_effect: t.hasShineEffect,\n      is_active: t.isEnabled,\n      is_progress_visible: t.isLoaderVisible,\n      is_visible: t.isVisible,\n      text: t.text,\n      text_color: t.textColor\n    });\n  }\n);\nfunction li() {\n  ge.set(!1);\n}\nconst Jc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  backgroundColor: Ka,\n  hasShineEffect: Za,\n  isEnabled: Xa,\n  isLoaderVisible: ei,\n  isMounted: ge,\n  isVisible: ti,\n  mount: ai,\n  offClick: ci,\n  onClick: ii,\n  setParams: ui,\n  state: sn,\n  text: ni,\n  textColor: oi,\n  unmount: li\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction an() {\n  throw new l(\n    Vr,\n    \"CSS variables are already bound\"\n  );\n}\nfunction pi(e) {\n  return Ls()(e);\n}\nconst nt = \"themeParams\", Uo = \"theme_changed\", _i = H(nt), fi = Ze(nt, be), di = fi(\n  \"bindCssVars\",\n  (e) => {\n    ke() && an(), e || (e = (o) => `--tg-theme-${xt(o)}`);\n    function t(o) {\n      Object.entries(U()).forEach(([s, r]) => {\n        r && o(s, r);\n      });\n    }\n    function n() {\n      t((o, s) => {\n        Vt(e(o), s);\n      });\n    }\n    return n(), U.sub(n), ke.set(!0), () => {\n      t(Lt), U.unsub(n), ke.set(!1);\n    };\n  }\n), qo = _i(\"mount\", () => {\n  be() || (E(Uo, Fo), U.set(\n    D() && P(nt) || oe().themeParams\n  ), be.set(!0));\n}), Fo = (e) => {\n  const t = pi(e.theme_params);\n  U.set(t), O(nt, t);\n};\nfunction mi() {\n  v(Uo, Fo), be.set(!1);\n}\n// @__NO_SIDE_EFFECTS__\nfunction Wo(e) {\n  return /* @__PURE__ */ _(() => {\n    const t = e();\n    return fe(t) ? t : t === \"bg_color\" ? nn() : Fe();\n  });\n}\nconst Ee = /* @__PURE__ */ c(\"bg_color\"), cn = /* @__PURE__ */ Wo(Ee), we = /* @__PURE__ */ c(\"bottom_bar_bg_color\"), un = /* @__PURE__ */ _(() => {\n  const e = we();\n  return fe(e) ? e : e === \"bottom_bar_bg_color\" ? jo() || Fe() : e === \"secondary_bg_color\" ? Fe() : nn();\n}), Se = /* @__PURE__ */ c(\"bg_color\"), Go = /* @__PURE__ */ Wo(Se), ye = /* @__PURE__ */ c(!1), xe = /* @__PURE__ */ c(!1), hi = /* @__PURE__ */ _(() => {\n  const e = cn();\n  return e ? Vo(e) : !1;\n}), ot = /* @__PURE__ */ c(!0), zo = /* @__PURE__ */ _(() => ({\n  backgroundColor: Ee(),\n  bottomBarColor: we(),\n  headerColor: Se(),\n  isActive: ot()\n})), Ot = \"web_app_set_background_color\", Pt = \"web_app_set_bottom_bar_color\", Ve = \"web_app_set_header_color\", Qo = \"visibility_changed\", Pe = \"miniApp\", ln = {\n  any: [\n    Ot,\n    Pt,\n    Ve\n  ]\n}, bi = /* @__PURE__ */ _(() => ln.any.some((e) => Q(e, V()))), Jo = H(Pe), gi = B(Pe, ln), st = J(Pe, ye, ln), Ei = st(\n  \"bindCssVars\",\n  (e) => {\n    xe() && an();\n    const [t, n] = te();\n    function o(s, r) {\n      function a() {\n        Vt(s, r() || null);\n      }\n      a(), t(r.sub(a), Lt.bind(null, s));\n    }\n    return e || (e = (s) => `--tg-${xt(s)}`), o(e(\"bgColor\"), cn), o(e(\"bottomBarColor\"), un), o(e(\"headerColor\"), Go), t(() => {\n      xe.set(!1);\n    }), xe.set(!0), n;\n  }\n), wi = Jo(\"close\", (e) => {\n  f(\"web_app_close\", { return_back: e });\n}), Yo = (e) => {\n  ot.set(e.is_visible), rt();\n}, Si = gi(\n  \"mount\",\n  () => {\n    if (!ye()) {\n      const e = D() && P(Pe);\n      qo(), Ko.ifAvailable(e ? e.backgroundColor : \"bg_color\"), Zo.ifAvailable(e ? e.bottomBarColor : \"bottom_bar_bg_color\"), Xo.ifAvailable(e ? e.headerColor : \"bg_color\"), ot.set(e ? e.isActive : !0), E(Qo, Yo), ye.set(!0);\n    }\n  }\n), yi = Jo(\"ready\", () => {\n  f(\"web_app_ready\");\n});\nfunction rt() {\n  O(Pe, zo());\n}\nconst Ko = st(\n  \"setBackgroundColor\",\n  (e) => {\n    e !== Ee() && (f(Ot, { color: e }), Ee.set(e), rt());\n  },\n  Ot\n), Zo = st(\n  \"setBottomBarColor\",\n  (e) => {\n    e !== we() && (f(Pt, { color: e }), we.set(e), rt());\n  },\n  Pt\n), Xo = st(\n  \"setHeaderColor\",\n  (e) => {\n    e !== Se() && (f(Ve, fe(e) ? { color: e } : { color_key: e }), Se.set(e), rt());\n  },\n  Ve,\n  {\n    rgb: [Ve, \"color\", fe]\n  }\n);\nfunction Ai() {\n  v(Qo, Yo), ye.set(!1);\n}\nconst Yc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  backgroundColor: Ee,\n  backgroundColorRGB: cn,\n  bindCssVars: Ei,\n  bottomBarColor: we,\n  bottomBarColorRGB: un,\n  close: wi,\n  headerColor: Se,\n  headerColorRGB: Go,\n  isActive: ot,\n  isCssVarsBound: xe,\n  isDark: hi,\n  isMounted: ye,\n  isSupported: bi,\n  mount: Si,\n  ready: yi,\n  setBackgroundColor: Ko,\n  setBottomBarColor: Zo,\n  setHeaderColor: Xo,\n  state: zo,\n  unmount: Ai\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction Ci(e) {\n  const t = e.message.trim(), n = (e.title || \"\").trim(), o = e.buttons || [];\n  if (n.length > 64)\n    throw new l(ce, `Invalid title: ${n}`);\n  if (!t || t.length > 256)\n    throw new l(ce, `Invalid message: ${t}`);\n  if (o.length > 3)\n    throw new l(ce, `Invalid buttons count: ${o.length}`);\n  return {\n    title: n,\n    message: t,\n    buttons: o.length ? o.map((s, r) => {\n      const a = s.id || \"\";\n      if (a.length > 64)\n        throw new l(ce, `Button with index ${r} has invalid id: ${a}`);\n      if (!s.type || s.type === \"default\" || s.type === \"destructive\") {\n        const i = s.text.trim();\n        if (!i || i.length > 64)\n          throw new l(ce, `Button with index ${r} has invalid text: ${i}`);\n        return { type: s.type, text: i, id: a };\n      }\n      return { type: s.type, id: a };\n    }) : [{ type: \"close\", id: \"\" }]\n  };\n}\nconst pn = \"web_app_open_popup\", vi = B(\"popup\", pn), Le = /* @__PURE__ */ c(!1), Ti = N(pn), $i = vi(\n  \"open\",\n  async (e) => {\n    if (Le())\n      throw new l(Wt, \"A popup is already opened\");\n    Le.set(!0);\n    try {\n      const { button_id: t = null } = await y(pn, \"popup_closed\", {\n        ...e,\n        params: Ci(e)\n      });\n      return t;\n    } finally {\n      Le.set(!1);\n    }\n  }\n), Kc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  isOpened: Le,\n  isSupported: Ti,\n  open: $i\n}, Symbol.toStringTag, { value: \"Module\" })), Ri = \"web_app_close_scan_qr_popup\", _n = \"web_app_open_scan_qr_popup\", Oi = \"scan_qr_popup_closed\", Pi = \"qr_text_received\", es = B(\"qrScanner\", _n), Bt = es(\"close\", () => {\n  X.set(!1), f(Ri);\n}), X = /* @__PURE__ */ c(!1), Bi = N(_n);\nfunction Mi(e) {\n  return b.withFn((t) => {\n    if (X())\n      throw new l(Wt, \"The QR Scanner is already opened\");\n    X.set(!0), e || (e = {});\n    const { onCaptured: n, text: o, capture: s } = e, [, r] = te(\n      // Whenever the scanner was closed for some reason (by a developer or a\n      // user), we should resolve the promise with undefined.\n      X.sub(() => {\n        a.resolve();\n      }),\n      // Whenever user closed the scanner, update the isOpened signal state.\n      E(Oi, () => {\n        X.set(!1);\n      }),\n      // Whenever some QR was scanned, we should check if it must be captured.\n      E(Pi, (i) => {\n        n ? n(i.data) : (!s || s(i.data)) && (a.resolve(i.data), Bt());\n      })\n    ), a = new rr({ abortSignal: t }).catch(Bt).finally(r);\n    return (e.postEvent || f)(_n, { text: o }), a;\n  }, e);\n}\nconst Ii = es(\"open\", Mi), Zc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  close: Bt,\n  isOpened: X,\n  isSupported: Bi,\n  open: Ii\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction F(e) {\n  return /* @__PURE__ */ _(() => fn()[e]);\n}\nconst pe = /* @__PURE__ */ c({\n  hasShineEffect: !1,\n  isEnabled: !0,\n  isLoaderVisible: !1,\n  isVisible: !1,\n  position: \"left\",\n  text: \"Cancel\"\n}), fn = /* @__PURE__ */ _(() => {\n  const e = pe();\n  return {\n    ...e,\n    backgroundColor: e.backgroundColor || un() || \"#000000\",\n    textColor: e.textColor || on() || \"#2481cc\"\n  };\n}), Ae = /* @__PURE__ */ c(!1), Di = F(\"backgroundColor\"), Ni = F(\"hasShineEffect\"), ki = F(\"isEnabled\"), xi = F(\"isLoaderVisible\"), Vi = F(\"isVisible\"), Li = F(\"position\"), ji = F(\"text\"), Hi = F(\"textColor\"), at = \"web_app_setup_secondary_button\", ts = \"secondary_button_pressed\", it = \"secondaryButton\", dn = B(it, at), Ui = J(it, Ae, at), qi = N(at), Fi = dn(\"mount\", () => {\n  if (!Ae()) {\n    const e = D() && P(it);\n    e && pe.set(e), Ae.set(!0);\n  }\n}), Wi = dn(\n  \"onClick\",\n  (e) => E(ts, e)\n), Gi = dn(\n  \"offClick\",\n  (e) => {\n    v(ts, e);\n  }\n), zi = Ui(\n  \"setParams\",\n  (e) => {\n    pe.set({\n      ...pe(),\n      ...Object.fromEntries(\n        Object.entries(e).filter(([, n]) => n !== void 0)\n      )\n    }), O(it, pe());\n    const t = fn();\n    t.text && f(at, {\n      color: t.backgroundColor,\n      has_shine_effect: t.hasShineEffect,\n      is_active: t.isEnabled,\n      is_progress_visible: t.isLoaderVisible,\n      is_visible: t.isVisible,\n      position: t.position,\n      text: t.text,\n      text_color: t.textColor\n    });\n  }\n);\nfunction Qi() {\n  Ae.set(!1);\n}\nconst Xc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  backgroundColor: Di,\n  hasShineEffect: Ni,\n  isEnabled: ki,\n  isLoaderVisible: xi,\n  isMounted: Ae,\n  isSupported: qi,\n  isVisible: Vi,\n  mount: Fi,\n  offClick: Gi,\n  onClick: Wi,\n  position: Li,\n  setParams: zi,\n  state: fn,\n  text: ji,\n  textColor: Hi,\n  unmount: Qi\n}, Symbol.toStringTag, { value: \"Module\" })), ct = \"web_app_setup_settings_button\", ns = \"settings_button_pressed\", ut = \"settingsButton\", Mt = /* @__PURE__ */ c(!1), Ce = /* @__PURE__ */ c(!1), Ji = N(ct), mn = B(ut, ct), os = J(ut, Ce, ct), Yi = os(\"hide\", () => {\n  hn(!1);\n}), Ki = mn(\"mount\", () => {\n  Ce() || (hn(D() && P(ut) || !1), Ce.set(!0));\n});\nfunction hn(e) {\n  e !== Mt() && (f(ct, { is_visible: e }), O(ut, e), Mt.set(e));\n}\nconst Zi = mn(\n  \"onClick\",\n  (e) => E(ns, e)\n), Xi = mn(\n  \"offClick\",\n  (e) => {\n    v(ns, e);\n  }\n), ec = os(\"show\", () => {\n  hn(!0);\n});\nfunction tc() {\n  Ce.set(!1);\n}\nconst eu = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  hide: Yi,\n  isMounted: Ce,\n  isSupported: Ji,\n  isVisible: Mt,\n  mount: Ki,\n  offClick: Xi,\n  onClick: Zi,\n  show: ec,\n  unmount: tc\n}, Symbol.toStringTag, { value: \"Module\" })), lt = \"web_app_setup_swipe_behavior\", pt = \"swipeBehavior\", ve = /* @__PURE__ */ c(!1), nc = N(lt), It = /* @__PURE__ */ c(!0), oc = B(pt, lt), ss = J(pt, ve, lt), sc = ss(\"disableVertical\", () => {\n  bn(!1);\n}), rc = ss(\"enableVertical\", () => {\n  bn(!0);\n}), ac = oc(\"mount\", () => {\n  ve() || (bn(\n    D() && P(pt) || !1,\n    !0\n  ), ve.set(!0));\n});\nfunction bn(e, t) {\n  (e !== It() || t) && (f(lt, { allow_vertical_swipe: e }), O(pt, e), It.set(e));\n}\nfunction ic() {\n  ve.set(!1);\n}\nconst tu = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  disableVertical: sc,\n  enableVertical: rc,\n  isMounted: ve,\n  isSupported: nc,\n  isVerticalEnabled: It,\n  mount: ac,\n  unmount: ic\n}, Symbol.toStringTag, { value: \"Module\" })), nu = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  accentTextColor: ja,\n  backgroundColor: nn,\n  bindCssVars: di,\n  bottomBarBgColor: jo,\n  buttonColor: on,\n  buttonTextColor: Lo,\n  destructiveTextColor: Ha,\n  headerBackgroundColor: Ua,\n  hintColor: qa,\n  isCssVarsBound: ke,\n  isDark: Fa,\n  isMounted: be,\n  linkColor: Wa,\n  mount: qo,\n  secondaryBackgroundColor: Fe,\n  sectionBackgroundColor: Ga,\n  sectionHeaderTextColor: za,\n  sectionSeparatorColor: Qa,\n  state: U,\n  subtitleTextColor: Ja,\n  textColor: Ya,\n  unmount: mi\n}, Symbol.toStringTag, { value: \"Module\" })), re = \"viewport\", rs = \"web_app_request_fullscreen\", cc = \"fullscreen_failed\", gn = \"fullscreen_changed\", as = \"safe_area_changed\", is = \"content_safe_area_changed\", cs = \"viewport_changed\", kn = \"web_app_request_safe_area\", xn = \"web_app_request_content_safe_area\", Vn = {\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0\n};\nfunction Et(e) {\n  return Math.max(e, 0);\n}\nconst _e = /* @__PURE__ */ c({\n  contentSafeAreaInsets: Vn,\n  height: 0,\n  isExpanded: !1,\n  isFullscreen: !1,\n  safeAreaInsets: Vn,\n  stableHeight: 0,\n  width: 0\n});\nfunction K(e) {\n  return /* @__PURE__ */ _(() => _e()[e]);\n}\nfunction ae(e) {\n  const { height: t, stableHeight: n, width: o } = e;\n  _e.set({\n    ..._e(),\n    ...xo({\n      ...e,\n      height: t ? Et(t) : void 0,\n      width: o ? Et(o) : void 0,\n      stableHeight: n ? Et(n) : void 0\n    })\n  }), O(re, _e());\n}\nfunction uc() {\n  return P(re);\n}\nconst us = K(\"isFullscreen\"), En = /* @__PURE__ */ c(), lc = /* @__PURE__ */ _(() => !!En()), ls = /* @__PURE__ */ c(), Be = /* @__PURE__ */ c(!1), pc = /* @__PURE__ */ _(() => !!_t()), ps = /* @__PURE__ */ c(void 0), _t = /* @__PURE__ */ c(), _c = J(re, Be, rs);\nfunction _s(e, t) {\n  return _c(e, /* @__PURE__ */ Re(\n    (n) => y(t, [gn, cc], n).then((o) => {\n      if (\"error\" in o) {\n        if (o.error === \"ALREADY_FULLSCREEN\")\n          return !0;\n        throw new l(Ur, \"Fullscreen request failed\", o.error);\n      }\n      return o.is_fullscreen;\n    }).then((o) => {\n      o !== us() && ae({ isFullscreen: o });\n    }),\n    () => new l(q, \"Fullscreen mode change is already being requested\"),\n    En,\n    ls\n  ));\n}\nconst fc = _s(\"requestFullscreen\", rs), dc = _s(\"exitFullscreen\", \"web_app_exit_fullscreen\"), fs = H(re), mc = Ze(re, Be);\nfunction ft(e) {\n  return /* @__PURE__ */ _(() => wn()[e]);\n}\nconst wn = K(\"safeAreaInsets\"), ds = ft(\"bottom\"), ms = ft(\"left\"), hs = ft(\"right\"), bs = ft(\"top\");\nfunction dt(e) {\n  return /* @__PURE__ */ _(() => Sn()[e]);\n}\nconst Sn = K(\"contentSafeAreaInsets\"), gs = dt(\"bottom\"), Es = dt(\"left\"), ws = dt(\"right\"), Ss = dt(\"top\"), hc = /* @__PURE__ */ h(\n  \"requestContentSafeAreaInsets\",\n  (e) => y(xn, \"content_safe_area_changed\", e),\n  { isSupported: xn }\n), bc = /* @__PURE__ */ h(\n  \"requestSafeAreaInsets\",\n  (e) => y(kn, \"safe_area_changed\", e),\n  { isSupported: kn }\n);\nfunction gc(e) {\n  return y(\"web_app_request_viewport\", \"viewport_changed\", e).then((t) => ({\n    height: t.height,\n    width: t.width,\n    isExpanded: t.is_expanded,\n    isStable: t.is_state_stable\n  }));\n}\nconst ys = (e) => {\n  const { height: t } = e;\n  ae({\n    isExpanded: e.is_expanded,\n    height: t,\n    width: e.width,\n    stableHeight: e.is_state_stable ? t : void 0\n  });\n}, As = (e) => {\n  ae({ isFullscreen: e.is_fullscreen });\n}, Cs = (e) => {\n  ae({ safeAreaInsets: e });\n}, vs = (e) => {\n  ae({ contentSafeAreaInsets: e });\n}, Ec = fs(\"mount\", /* @__PURE__ */ $o(\n  re,\n  (e) => b.resolve().then(async () => {\n    const t = D() && uc();\n    if (t)\n      return t;\n    const [\n      n,\n      o\n    ] = await b.all([\n      bc.ifAvailable(e) || wn(),\n      hc.ifAvailable(e) || Sn()\n    ]), s = oe(), r = {\n      contentSafeAreaInsets: o,\n      isFullscreen: !!s.fullscreen,\n      safeAreaInsets: n\n    };\n    if ([\"macos\", \"tdesktop\", \"unigram\", \"webk\", \"weba\", \"web\"].includes(s.platform)) {\n      const a = window;\n      return {\n        ...r,\n        height: a.innerHeight,\n        isExpanded: !0,\n        stableHeight: a.innerHeight,\n        width: a.innerWidth\n      };\n    }\n    return gc(e).then((a) => ({\n      ...r,\n      height: a.height,\n      isExpanded: a.isExpanded,\n      stableHeight: a.isStable ? a.height : 0,\n      width: a.width\n    }));\n  }),\n  (e) => {\n    E(cs, ys), E(gn, As), E(as, Cs), E(is, vs), ae(e);\n  },\n  Be,\n  _t,\n  ps\n));\nfunction wc() {\n  const e = _t();\n  e && e.cancel(), v(cs, ys), v(gn, As), v(as, Cs), v(is, vs), Be.set(!1);\n}\nconst je = /* @__PURE__ */ c(!1), yn = K(\"height\"), An = K(\"stableHeight\"), Ts = K(\"width\"), Sc = mc(\n  \"bindCssVars\",\n  (e) => {\n    je() && an(), e || (e = (n) => `--tg-viewport-${xt(n)}`);\n    const t = [\n      [\"height\", yn],\n      [\"stableHeight\", An],\n      [\"width\", Ts],\n      [\"safeAreaInsetTop\", bs],\n      [\"safeAreaInsetBottom\", ds],\n      [\"safeAreaInsetLeft\", ms],\n      [\"safeAreaInsetRight\", hs],\n      [\"contentSafeAreaInsetTop\", Ss],\n      [\"contentSafeAreaInsetBottom\", gs],\n      [\"contentSafeAreaInsetLeft\", Es],\n      [\"contentSafeAreaInsetRight\", ws]\n    ].reduce((n, [o, s]) => {\n      const r = e(o);\n      if (r) {\n        const a = () => {\n          Vt(r, `${s()}px`);\n        };\n        n.push([a, s.sub(a), r]);\n      }\n      return n;\n    }, []);\n    return t.forEach((n) => {\n      n[0]();\n    }), je.set(!0), () => {\n      t.forEach((n) => {\n        n[1](), Lt(n[2]);\n      }), je.set(!1);\n    };\n  }\n), yc = fs(\"expand\", () => {\n  f(\"web_app_expand\");\n}), Ac = K(\"isExpanded\"), Cc = /* @__PURE__ */ _(() => yn() === An()), ou = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  bindCssVars: Sc,\n  changeFullscreenError: ls,\n  changeFullscreenPromise: En,\n  contentSafeAreaInsetBottom: gs,\n  contentSafeAreaInsetLeft: Es,\n  contentSafeAreaInsetRight: ws,\n  contentSafeAreaInsetTop: Ss,\n  contentSafeAreaInsets: Sn,\n  exitFullscreen: dc,\n  expand: yc,\n  height: yn,\n  isChangingFullscreen: lc,\n  isCssVarsBound: je,\n  isExpanded: Ac,\n  isFullscreen: us,\n  isMounted: Be,\n  isMounting: pc,\n  isStable: Cc,\n  mount: Ec,\n  mountError: ps,\n  mountPromise: _t,\n  requestFullscreen: fc,\n  safeAreaInsetBottom: ds,\n  safeAreaInsetLeft: ms,\n  safeAreaInsetRight: hs,\n  safeAreaInsetTop: bs,\n  safeAreaInsets: wn,\n  stableHeight: An,\n  state: _e,\n  unmount: wc,\n  width: Ts\n}, Symbol.toStringTag, { value: \"Module\" })), Ln = \"web_app_request_emoji_status_access\", $s = /* @__PURE__ */ c(), vc = /* @__PURE__ */ c(), su = /* @__PURE__ */ _(() => !!$s()), ru = /* @__PURE__ */ h(\n  \"requestEmojiStatusAccess\",\n  /* @__PURE__ */ Re(\n    () => y(Ln, \"emoji_status_access_requested\").then((e) => e.status),\n    () => new l(\n      q,\n      \"Emoji status access request is currently in progress\"\n    ),\n    $s,\n    vc,\n    !1\n  ),\n  { isSupported: Ln }\n), jn = \"web_app_set_emoji_status\", Rs = /* @__PURE__ */ c(), Tc = /* @__PURE__ */ c(), au = /* @__PURE__ */ _(() => !!Rs()), iu = /* @__PURE__ */ h(\n  \"setEmojiStatus\",\n  /* @__PURE__ */ Re(\n    async (e, t) => {\n      const n = await y(jn, [\"emoji_status_set\", \"emoji_status_failed\"], {\n        params: {\n          custom_emoji_id: e,\n          duration: t\n        }\n      });\n      if (n && \"error\" in n)\n        throw new l(qr, \"Failed to set emoji status\", n.error);\n    },\n    () => new l(\n      q,\n      \"Emoji status set request is currently in progress\"\n    ),\n    Rs,\n    Tc,\n    !1\n  ),\n  { isSupported: jn }\n), Os = \"web_app_add_to_home_screen\", ie = { isSupported: Os }, Ps = /* @__PURE__ */ c(), $c = /* @__PURE__ */ c(), cu = /* @__PURE__ */ _(() => !!Ps()), uu = /* @__PURE__ */ h(\n  \"addToHomeScreen\",\n  () => {\n    f(Os);\n  },\n  ie\n), lu = /* @__PURE__ */ h(\n  \"checkHomeScreenStatus\",\n  /* @__PURE__ */ Re(\n    (e) => y(\"web_app_check_home_screen\", \"home_screen_checked\", e).then((t) => t.status || \"unknown\"),\n    () => new l(\n      q,\n      \"Check home screen status request is currently in progress\"\n    ),\n    Ps,\n    $c\n  ),\n  ie\n), pu = /* @__PURE__ */ h(\n  \"onAddedToHomeScreen\",\n  (e, t) => E(\"home_screen_added\", e, t),\n  ie\n), _u = /* @__PURE__ */ h(\n  \"onAddToHomeScreenFailed\",\n  (e, t) => E(\"home_screen_failed\", e, t),\n  ie\n), fu = /* @__PURE__ */ h(\n  \"offAddedToHomeScreen\",\n  (e) => {\n    v(\"home_screen_added\", e);\n  },\n  ie\n), du = /* @__PURE__ */ h(\n  \"offAddToHomeScreenFailed\",\n  (e) => {\n    v(\"home_screen_failed\", e);\n  },\n  ie\n), Rc = H(), mu = Rc(\n  \"openLink\",\n  (e, t) => {\n    if (typeof e == \"string\")\n      try {\n        e = new URL(e);\n      } catch (n) {\n        throw new l(Ft, `\"${e.toString()}\" is invalid URL`, n);\n      }\n    t || (t = {}), f(\"web_app_open_link\", {\n      url: e.toString(),\n      try_browser: t.tryBrowser,\n      try_instant_view: t.tryInstantView\n    });\n  }\n), Hn = \"web_app_open_tg_link\", Oc = H(), Pc = Oc(\n  \"openTelegramLink\",\n  (e) => {\n    const t = e.toString();\n    if (!t.match(/^https:\\/\\/t.me\\/.+/))\n      throw new l(Ft, `\"${t}\" is invalid URL`);\n    if (!Q(Hn, V())) {\n      window.location.href = t;\n      return;\n    }\n    e = new URL(e), f(Hn, { path_full: e.pathname + e.search });\n  }\n), Bc = H(), hu = Bc(\n  \"shareURL\",\n  (e, t) => {\n    Pc(\n      \"https://t.me/share/url?\" + new URLSearchParams({ url: e, text: t || \"\" }).toString().replace(/\\+/g, \"%20\")\n    );\n  }\n), Dt = \"web_app_request_phone\", wt = /* @__PURE__ */ c(!1), Mc = /* @__PURE__ */ h(\n  \"requestPhoneAccess\",\n  (e) => {\n    if (wt())\n      throw new l(q, \"Phone access request is currently in progress\");\n    return wt.set(!0), y(Dt, \"phone_requested\", e).then((t) => t.status).finally(() => {\n      wt.set(!1);\n    });\n  },\n  {\n    isSupported: Dt\n  }\n);\nfunction Un(e) {\n  return e || (e = {}), se(\"getRequestedContact\", {}, {\n    ...e,\n    timeout: e.timeout || 5e3\n  }).then(\n    Kn({\n      contact: He({\n        userId: [\"user_id\", Ue()],\n        phoneNumber: [\"phone_number\", L()],\n        firstName: [\"first_name\", L()],\n        lastName: [\"last_name\", L(!0)]\n      })(),\n      authDate: [\"auth_date\", Nt()],\n      hash: L()\n    })()\n  );\n}\nconst bu = /* @__PURE__ */ h(\n  \"requestContact\",\n  (e) => b.withFn(\n    async (t) => {\n      const n = { abortSignal: t };\n      try {\n        return await Un(n);\n      } catch {\n      }\n      if (await Mc(n) !== \"sent\")\n        throw new l(kr, \"User denied access\");\n      let s = 50;\n      for (; !t.aborted; ) {\n        try {\n          return await Un(n);\n        } catch {\n        }\n        await ar(s), s += 50;\n      }\n      return null;\n    },\n    e\n  ),\n  {\n    isSupported: Dt\n  }\n), qn = \"web_app_request_write_access\", St = /* @__PURE__ */ c(!1), gu = /* @__PURE__ */ h(\n  \"requestWriteAccess\",\n  (e) => {\n    if (St())\n      throw new l(q, \"Write access request is currently in progress\");\n    return St.set(!0), y(qn, \"write_access_requested\", e).then((t) => t.status).finally(() => {\n      St.set(!1);\n    });\n  },\n  {\n    isSupported: qn\n  }\n), Eu = /* @__PURE__ */ h(\n  \"getCurrentTime\",\n  (e) => se(\"getCurrentTime\", {}, e).then(Nt()),\n  {\n    isSupported: \"web_app_invoke_custom_method\"\n  }\n), Fn = \"web_app_read_text_from_clipboard\", wu = /* @__PURE__ */ h(\n  \"readTextFromClipboard\",\n  (e) => {\n    const t = Co();\n    return y(Fn, \"clipboard_text_received\", {\n      ...e,\n      params: { req_id: t },\n      capture: yo(t)\n    }).then(({ data: n = null }) => n);\n  },\n  {\n    isSupported: Fn\n  }\n), Su = /* @__PURE__ */ h(\n  \"sendData\",\n  (e) => {\n    const { size: t } = new Blob([e]);\n    if (!t || t > 4096)\n      throw new l(Nr, t ? \"Maximum size of data to send is 4096 bytes\" : \"Attempted to send empty data\");\n    f(\"web_app_data_send\", { data: e });\n  }\n), Wn = \"web_app_share_to_story\", yu = /* @__PURE__ */ h(\n  \"shareStory\",\n  (e, t) => {\n    t || (t = {}), f(Wn, {\n      text: t.text,\n      media_url: e,\n      widget_link: t.widgetLink\n    });\n  },\n  { isSupported: Wn }\n), Gn = \"web_app_switch_inline_query\", Au = /* @__PURE__ */ h(\n  \"switchInlineQuery\",\n  (e, t) => {\n    f(Gn, {\n      query: e,\n      chat_types: t || []\n    });\n  },\n  {\n    isSupported: [Gn, {\n      fn: () => !!oe().botInline,\n      error: \"Mini App should be ran in Bot inline mode\"\n    }]\n  }\n);\nfunction Cu(e) {\n  try {\n    return { result: e() };\n  } catch (t) {\n    return { error: t };\n  }\n}\nfunction vu(e) {\n  Ir(e), Cr();\n  const [t, n] = te(\n    E(\"reload_iframe\", () => {\n      f(\"iframe_will_reload\"), window.location.reload();\n    }),\n    vr\n  ), { acceptCustomStyles: o = !0 } = e || {};\n  if (o) {\n    const s = document.createElement(\"style\");\n    s.id = \"telegram-custom-styles\", document.head.appendChild(s), t(\n      E(\"set_custom_style\", (r) => {\n        s.innerHTML = r;\n      }),\n      () => {\n        document.head.removeChild(s);\n      }\n    );\n  }\n  return f(\"iframe_ready\", { reload_supported: !0 }), n;\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@telegram-apps/sdk/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Capp%5C%5Cglobals.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Ccomponents%5C%5CTelegramExpand.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Capp%5C%5Cglobals.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Ccomponents%5C%5CTelegramExpand.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/globals.scss */ \"(app-pages-browser)/./src/app/globals.scss\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/TelegramExpand.tsx */ \"(app-pages-browser)/./src/components/TelegramExpand.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q19wcm9qZWN0cyU1QyU1Q0lQVV9NVlAlNUMlNUNmcm9udGVuZCU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q2dsb2JhbHMuc2NzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDX3Byb2plY3RzJTVDJTVDSVBVX01WUCU1QyU1Q2Zyb250ZW5kJTVDJTVDc3JjJTVDJTVDY29tcG9uZW50cyU1QyU1Q1RlbGVncmFtRXhwYW5kLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMmRlZmF1bHQlMjIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxzS0FBNkY7QUFDN0Y7QUFDQSxnTUFBdUkiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXF9wcm9qZWN0c1xcXFxJUFVfTVZQXFxcXGZyb250ZW5kXFxcXHNyY1xcXFxhcHBcXFxcZ2xvYmFscy5zY3NzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJkZWZhdWx0XCJdICovIFwiRDpcXFxcX3Byb2plY3RzXFxcXElQVV9NVlBcXFxcZnJvbnRlbmRcXFxcc3JjXFxcXGNvbXBvbmVudHNcXFxcVGVsZWdyYW1FeHBhbmQudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Capp%5C%5Cglobals.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Ccomponents%5C%5CTelegramExpand.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.scss":
/*!******************************!*\
  !*** ./src/app/globals.scss ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"57e83caf67db\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5zY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksSUFBVSxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsiRDpcXF9wcm9qZWN0c1xcSVBVX01WUFxcZnJvbnRlbmRcXHNyY1xcYXBwXFxnbG9iYWxzLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI1N2U4M2NhZjY3ZGJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.scss\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/TelegramExpand.tsx":
/*!*******************************************!*\
  !*** ./src/components/TelegramExpand.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TelegramExpand)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/_/_async_to_generator */ \"(app-pages-browser)/./node_modules/next/node_modules/@swc/helpers/esm/_async_to_generator.js\");\n/* harmony import */ var _swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/_/_ts_generator */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @telegram-apps/sdk */ \"(app-pages-browser)/./node_modules/@telegram-apps/sdk/dist/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nvar _s = $RefreshSig$();\n\n\nfunction TelegramExpand() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"TelegramExpand.useEffect\": function() {\n            var enableFullscreen = function enableFullscreen() {\n                return _enableFullscreen.apply(this, arguments);\n            };\n            function _enableFullscreen() {\n                _enableFullscreen = (0,_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_1__._)(function() {\n                    var insideTelegram, err;\n                    return (0,_swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                return [\n                                    4,\n                                    (0,_telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.isTMA)()\n                                ];\n                            case 1:\n                                insideTelegram = _state.sent();\n                                if (!insideTelegram) return [\n                                    2\n                                ];\n                                (0,_telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.init)() // Инициализируем SDK\n                                ;\n                                if (_telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.viewport.mount.isAvailable()) {\n                                    _telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.viewport.mount();\n                                    _telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.viewport.expand();\n                                }\n                                if (!_telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.viewport.requestFullscreen.isAvailable()) return [\n                                    3,\n                                    5\n                                ];\n                                _state.label = 2;\n                            case 2:\n                                _state.trys.push([\n                                    2,\n                                    4,\n                                    ,\n                                    5\n                                ]);\n                                return [\n                                    4,\n                                    _telegram_apps_sdk__WEBPACK_IMPORTED_MODULE_3__.viewport.requestFullscreen()\n                                ];\n                            case 3:\n                                _state.sent();\n                                console.log('[TG] Fullscreen activated');\n                                return [\n                                    3,\n                                    5\n                                ];\n                            case 4:\n                                err = _state.sent();\n                                console.warn('[TG] Fullscreen request failed:', err);\n                                return [\n                                    3,\n                                    5\n                                ];\n                            case 5:\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                });\n                return _enableFullscreen.apply(this, arguments);\n            }\n            enableFullscreen();\n        }\n    }[\"TelegramExpand.useEffect\"], []);\n    return null;\n}\n_s(TelegramExpand, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TelegramExpand;\nvar _c;\n$RefreshReg$(_c, \"TelegramExpand\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1RlbGVncmFtRXhwYW5kLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFaUM7QUFDeUI7QUFFM0MsU0FBU0k7O0lBQ3RCSixnREFBU0E7b0NBQUM7Z0JBQ09LLDRCQUFBQTt1QkFBQUE7O3FCQUFBQTtnQkFBQUEsb0JBQWY7d0JBQ1FDLGdCQWNLQzs7OztnQ0FkWTs7b0NBQU1OLHlEQUFLQTs7O2dDQUE1QkssaUJBQWlCO2dDQUN2QixJQUFJLENBQUNBLGdCQUFnQjs7O2dDQUVyQkosd0RBQUlBLEdBQUcscUJBQXFCOztnQ0FFNUIsSUFBSUMsd0RBQVFBLENBQUNLLEtBQUssQ0FBQ0MsV0FBVyxJQUFJO29DQUNoQ04sd0RBQVFBLENBQUNLLEtBQUs7b0NBQ2RMLHdEQUFRQSxDQUFDTyxNQUFNO2dDQUNqQjtxQ0FFSVAsd0RBQVFBLENBQUNRLGlCQUFpQixDQUFDRixXQUFXLElBQXRDTjs7Ozs7Ozs7Ozs7O2dDQUVBOztvQ0FBTUEsd0RBQVFBLENBQUNRLGlCQUFpQjs7O2dDQUFoQztnQ0FDQUMsUUFBUUMsR0FBRyxDQUFDOzs7Ozs7Z0NBQ0xOO2dDQUNQSyxRQUFRRSxJQUFJLENBQUMsbUNBQW1DUDs7Ozs7Ozs7Ozs7Z0JBR3REO3VCQW5CZUY7O1lBcUJmQTtRQUNGO21DQUFHLEVBQUU7SUFFTCxPQUFPO0FBQ1Q7R0EzQndCRDtLQUFBQSIsInNvdXJjZXMiOlsiRDpcXF9wcm9qZWN0c1xcSVBVX01WUFxcZnJvbnRlbmRcXHNyY1xcY29tcG9uZW50c1xcVGVsZWdyYW1FeHBhbmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xyXG5cclxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IGlzVE1BLCBpbml0LCB2aWV3cG9ydCB9IGZyb20gJ0B0ZWxlZ3JhbS1hcHBzL3NkaydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRlbGVncmFtRXhwYW5kKCkge1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBhc3luYyBmdW5jdGlvbiBlbmFibGVGdWxsc2NyZWVuKCkge1xyXG4gICAgICBjb25zdCBpbnNpZGVUZWxlZ3JhbSA9IGF3YWl0IGlzVE1BKClcclxuICAgICAgaWYgKCFpbnNpZGVUZWxlZ3JhbSkgcmV0dXJuXHJcblxyXG4gICAgICBpbml0KCkgLy8g0JjQvdC40YbQuNCw0LvQuNC30LjRgNGD0LXQvCBTREtcclxuXHJcbiAgICAgIGlmICh2aWV3cG9ydC5tb3VudC5pc0F2YWlsYWJsZSgpKSB7XHJcbiAgICAgICAgdmlld3BvcnQubW91bnQoKVxyXG4gICAgICAgIHZpZXdwb3J0LmV4cGFuZCgpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh2aWV3cG9ydC5yZXF1ZXN0RnVsbHNjcmVlbi5pc0F2YWlsYWJsZSgpKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGF3YWl0IHZpZXdwb3J0LnJlcXVlc3RGdWxsc2NyZWVuKClcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdbVEddIEZ1bGxzY3JlZW4gYWN0aXZhdGVkJylcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgIGNvbnNvbGUud2FybignW1RHXSBGdWxsc2NyZWVuIHJlcXVlc3QgZmFpbGVkOicsIGVycilcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVGdWxsc2NyZWVuKClcclxuICB9LCBbXSlcclxuXHJcbiAgcmV0dXJuIG51bGxcclxufVxyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwiaXNUTUEiLCJpbml0Iiwidmlld3BvcnQiLCJUZWxlZ3JhbUV4cGFuZCIsImVuYWJsZUZ1bGxzY3JlZW4iLCJpbnNpZGVUZWxlZ3JhbSIsImVyciIsIm1vdW50IiwiaXNBdmFpbGFibGUiLCJleHBhbmQiLCJyZXF1ZXN0RnVsbHNjcmVlbiIsImNvbnNvbGUiLCJsb2ciLCJ3YXJuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/TelegramExpand.tsx\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Capp%5C%5Cglobals.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5C_projects%5C%5CIPU_MVP%5C%5Cfrontend%5C%5Csrc%5C%5Ccomponents%5C%5CTelegramExpand.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);